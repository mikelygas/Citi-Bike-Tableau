<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.0621.1547                               -->
<workbook source-build='2019.2.1 (20192.19.0621.1547)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts ignorable='true' predowngraded='true' />
    <MapboxVectorStylesAndLayers />
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Citi Bike Trip Data' inline='true' name='federated.0zss38a06g8xmf17gnfqh0sto8mb' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2013-07 - Citi Bike trip data' name='textscan.14h2hgy1puod5m17054jw1yqcq6s'>
            <connection class='textscan' directory='C:/Users/Owner/Desktop/TABLEAU_HW' filename='201605-citibike-tripdata.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation all='true' name='201610-citibike-tripdata.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='tripduration' />
            <column datatype='datetime' name='starttime' />
            <column datatype='datetime' name='stoptime' />
            <column datatype='integer' name='start station id' />
            <column datatype='string' name='start station name' />
            <column datatype='real' name='start station latitude' />
            <column datatype='real' name='start station longitude' />
            <column datatype='integer' name='end station id' />
            <column datatype='string' name='end station name' />
            <column datatype='real' name='end station latitude' />
            <column datatype='real' name='end station longitude' />
            <column datatype='integer' name='bikeid' />
            <column datatype='string' name='usertype' />
            <column datatype='integer' name='birth year' />
            <column datatype='integer' name='gender' />
            <column datatype='integer' name='Trip Duration' />
            <column datatype='datetime' name='Start Time' />
            <column datatype='datetime' name='Stop Time' />
            <column datatype='integer' name='Bike ID' />
            <column datatype='string' name='User Type' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.14h2hgy1puod5m17054jw1yqcq6s' name='201601-citibike-tripdata.csv' table='[201601-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.14h2hgy1puod5m17054jw1yqcq6s' name='201602-citibike-tripdata.csv' table='[201602-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.14h2hgy1puod5m17054jw1yqcq6s' name='201603-citibike-tripdata.csv' table='[201603-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.14h2hgy1puod5m17054jw1yqcq6s' name='201604-citibike-tripdata.csv' table='[201604-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.14h2hgy1puod5m17054jw1yqcq6s' name='201605-citibike-tripdata.csv' table='[201605-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.14h2hgy1puod5m17054jw1yqcq6s' name='201606-citibike-tripdata.csv' table='[201606-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.14h2hgy1puod5m17054jw1yqcq6s' name='201607-citibike-tripdata.csv' table='[201607-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.14h2hgy1puod5m17054jw1yqcq6s' name='201608-citibike-tripdata.csv' table='[201608-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.14h2hgy1puod5m17054jw1yqcq6s' name='201609-citibike-tripdata.csv' table='[201609-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.14h2hgy1puod5m17054jw1yqcq6s' name='201611-citibike-tripdata.csv' table='[201611-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.14h2hgy1puod5m17054jw1yqcq6s' name='201612-citibike-tripdata.csv' table='[201612-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
          <relation connection='textscan.14h2hgy1puod5m17054jw1yqcq6s' name='201610-citibike-tripdata.csv' table='[201610-citibike-tripdata#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='tripduration' ordinal='0' />
              <column datatype='datetime' name='starttime' ordinal='1' />
              <column datatype='datetime' name='stoptime' ordinal='2' />
              <column datatype='integer' name='start station id' ordinal='3' />
              <column datatype='string' name='start station name' ordinal='4' />
              <column datatype='real' name='start station latitude' ordinal='5' />
              <column datatype='real' name='start station longitude' ordinal='6' />
              <column datatype='integer' name='end station id' ordinal='7' />
              <column datatype='string' name='end station name' ordinal='8' />
              <column datatype='real' name='end station latitude' ordinal='9' />
              <column datatype='real' name='end station longitude' ordinal='10' />
              <column datatype='integer' name='bikeid' ordinal='11' />
              <column datatype='string' name='usertype' ordinal='12' />
              <column datatype='integer' name='birth year' ordinal='13' />
              <column datatype='integer' name='gender' ordinal='14' />
            </columns>
          </relation>
        </relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[201610-citibike-tripdata.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>tripduration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[tripduration]</local-name>
            <parent-name>[201610-citibike-tripdata.csv+]</parent-name>
            <remote-alias>tripduration</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>starttime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[starttime]</local-name>
            <parent-name>[201610-citibike-tripdata.csv+]</parent-name>
            <remote-alias>starttime</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>stoptime</remote-name>
            <remote-type>135</remote-type>
            <local-name>[stoptime]</local-name>
            <parent-name>[201610-citibike-tripdata.csv+]</parent-name>
            <remote-alias>stoptime</remote-alias>
            <ordinal>2</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[start station id]</local-name>
            <parent-name>[201610-citibike-tripdata.csv+]</parent-name>
            <remote-alias>start station id</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[start station name]</local-name>
            <parent-name>[201610-citibike-tripdata.csv+]</parent-name>
            <remote-alias>start station name</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station latitude]</local-name>
            <parent-name>[201610-citibike-tripdata.csv+]</parent-name>
            <remote-alias>start station latitude</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>start station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[start station longitude]</local-name>
            <parent-name>[201610-citibike-tripdata.csv+]</parent-name>
            <remote-alias>start station longitude</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station id</remote-name>
            <remote-type>20</remote-type>
            <local-name>[end station id]</local-name>
            <parent-name>[201610-citibike-tripdata.csv+]</parent-name>
            <remote-alias>end station id</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[end station name]</local-name>
            <parent-name>[201610-citibike-tripdata.csv+]</parent-name>
            <remote-alias>end station name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station latitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station latitude]</local-name>
            <parent-name>[201610-citibike-tripdata.csv+]</parent-name>
            <remote-alias>end station latitude</remote-alias>
            <ordinal>9</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>end station longitude</remote-name>
            <remote-type>5</remote-type>
            <local-name>[end station longitude]</local-name>
            <parent-name>[201610-citibike-tripdata.csv+]</parent-name>
            <remote-alias>end station longitude</remote-alias>
            <ordinal>10</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>bikeid</remote-name>
            <remote-type>20</remote-type>
            <local-name>[bikeid]</local-name>
            <parent-name>[201610-citibike-tripdata.csv+]</parent-name>
            <remote-alias>bikeid</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>usertype</remote-name>
            <remote-type>129</remote-type>
            <local-name>[usertype]</local-name>
            <parent-name>[201610-citibike-tripdata.csv+]</parent-name>
            <remote-alias>usertype</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>birth year</remote-name>
            <remote-type>20</remote-type>
            <local-name>[birth year]</local-name>
            <parent-name>[201610-citibike-tripdata.csv+]</parent-name>
            <remote-alias>birth year</remote-alias>
            <ordinal>13</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>gender</remote-name>
            <remote-type>20</remote-type>
            <local-name>[gender]</local-name>
            <parent-name>[201610-citibike-tripdata.csv+]</parent-name>
            <remote-alias>gender</remote-alias>
            <ordinal>14</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[201610-citibike-tripdata.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0zss38a06g8xmf17gnfqh0sto8mb].[pcdf:sum:Number of Records:qk]&quot;' value='% Difference' />
          <alias key='&quot;[federated.0zss38a06g8xmf17gnfqh0sto8mb].[sum:Number of Records:qk]&quot;' value='Total Trips' />
        </aliases>
      </column>
      <column aggregation='None' caption='Age (bin)' datatype='integer' name='[Age (bin)]' role='dimension' type='ordinal'>
        <calculation class='bin' decimals='0' formula='[Calculation_287385960808939522]' peg='0' size='5' />
      </column>
      <column caption='Gender Label' datatype='string' name='[Calculation_287385960806457345]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='If [gender] = &apos;1&apos; THEN &apos;Male&apos;&#13;&#10;ELSEIF  [gender] = &apos;2&apos; THEN &apos;Female&apos;&#13;&#10;ELSEIF  [gender] = &apos;0&apos; THEN &apos;Unknown&apos;&#13;&#10;END' />
      </column>
      <column caption='Age' datatype='integer' name='[Calculation_287385960808939522]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='2016 - [birth year]' />
      </column>
      <column caption='Minutes' datatype='real' name='[Calculation_287385960815513603]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='[tripduration] / 60' />
      </column>
      <column caption='Trip Distance' datatype='real' name='[Calculation_287385960818552836]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='3959 * ACOS &#13;&#10;( &#13;&#10;SIN(RADIANS([start station latitude])) * SIN(RADIANS([end station latitude])) + &#13;&#10;COS(RADIANS([start station latitude])) * COS(RADIANS([end station latitude])) * COS(RADIANS([end station longitude]) - RADIANS([start station longitude])) &#13;&#10;)' />
      </column>
      <column caption='Repair/No Repair' datatype='string' name='[Calculation_287385960824729605]' role='measure' type='nominal'>
        <calculation class='tableau' formula='IF  sum([Calculation_287385960818552836]) &gt; 5000 THEN &apos;Repair Needed&apos;&#13;&#10;ELSE &apos;No Repair Needed&apos;&#13;&#10;END' />
      </column>
      <column caption='Total Distance' datatype='real' name='[Calculation_287385960825262086]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Calculation_287385960818552836])' />
      </column>
      <column caption='Day Period' datatype='string' name='[Calculation_828380865701134336]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF  DATEPART(&apos;hour&apos;,[starttime]) &gt;= 0 AND DATEPART(&apos;hour&apos;, [starttime]) &lt; 5 THEN &apos;Night&apos;&#13;&#10;ELSEIF  DATEPART(&apos;hour&apos;,[starttime]) &gt;= 5 AND DATEPART(&apos;hour&apos;, [starttime]) &lt; 13 THEN &apos;Morning&apos;&#13;&#10;ELSEIF  DATEPART(&apos;hour&apos;,[starttime]) &gt;= 13 AND DATEPART(&apos;hour&apos;, [starttime]) &lt; 21 THEN &apos;Afternoon&apos;&#13;&#10;ELSEIF  DATEPART(&apos;hour&apos;,[starttime]) &gt;= 21 AND DATEPART(&apos;hour&apos;, [starttime]) &lt; 24 THEN &apos;Night&apos;&#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[bikeid]' role='dimension' type='ordinal' />
      <column aggregation='Sum' datatype='integer' name='[birth year]' role='dimension' type='ordinal' />
      <column aggregation='Avg' datatype='real' name='[end station latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' datatype='real' name='[end station longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column datatype='string' name='[end station name]' role='dimension' type='nominal' />
      <column datatype='string' datatype-customized='true' name='[gender]' role='dimension' type='nominal' />
      <column aggregation='Avg' caption='Start Station Latitude 1' datatype='real' name='[start station latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
      <column aggregation='Avg' caption='Start Station Longitude 1' datatype='real' name='[start station longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
      <column caption='Start Station Name 1' datatype='string' name='[start station name]' role='dimension' type='nominal' />
      <column caption='Start Time 1' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
      <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
      <column-instance column='[Bottom 10 End Stations]' derivation='InOut' name='[io:Bottom 10 End Stations:nk]' pivot='key' type='nominal' />
      <column-instance column='[Top 10 End Stations]' derivation='InOut' name='[io:Top 10 End Stations:nk]' pivot='key' type='nominal' />
      <column-instance column='[Top 10 Stations (copy)]' derivation='InOut' name='[io:Top 10 Stations (copy):nk]' pivot='key' type='nominal' />
      <column-instance column='[Top 10 Stations]' derivation='InOut' name='[io:Top 10 Stations:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_287385960806457345]' derivation='None' name='[none:Calculation_287385960806457345:nk]' pivot='key' type='nominal' />
      <column-instance column='[Calculation_828380865701134336]' derivation='None' name='[none:Calculation_828380865701134336:nk]' pivot='key' type='nominal' />
      <column-instance column='[Number of Records]' derivation='Sum' name='[pcdf:sum:Number of Records:qk]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_287385960824729605]' derivation='User' name='[usr:Calculation_287385960824729605:nk]' pivot='key' type='nominal' />
      <group caption='Bottom 10 End Stations' name='[Bottom 10 End Stations]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Number of Records])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[end station name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Top 10 End Stations' name='[Top 10 End Stations]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Number of Records])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[end station name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Bottom 10 Start Stations' name='[Top 10 Stations (copy)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Number of Records])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[start station name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <group caption='Top 10 Start Stations' name='[Top 10 Stations]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
          <groupfilter direction='DESC' expression='SUM([Number of Records])' function='order' user:ui-marker='order'>
            <groupfilter function='level-members' level='[start station name]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </groupfilter>
        </groupfilter>
      </group>
      <extract count='-1' enabled='true' units='records'>
        <connection access_mode='readonly' authentication='auth-none' author-locale='en_US' class='hyper' dbname='C:/Users/Owner/Desktop/TABLEAU_HW/Citi Bike Trip Data.hyper' default-settings='yes' schema='Extract' sslmode='' update-time='07/09/2019 03:39:29 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <refresh>
            <refresh-event add-from-file-path='Citi Bike Trip Data' increment-value='%null%' refresh-type='create' rows-inserted='13845655' timestamp-start='2019-07-09 03:39:29.341' />
          </refresh>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>tripduration</remote-name>
              <remote-type>20</remote-type>
              <local-name>[tripduration]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>tripduration</remote-alias>
              <ordinal>0</ordinal>
              <family>201610-citibike-tripdata.csv+</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14201</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>starttime</remote-name>
              <remote-type>135</remote-type>
              <local-name>[starttime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>starttime</remote-alias>
              <ordinal>1</ordinal>
              <family>201610-citibike-tripdata.csv+</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>12261545</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>stoptime</remote-name>
              <remote-type>135</remote-type>
              <local-name>[stoptime]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>stoptime</remote-alias>
              <ordinal>2</ordinal>
              <family>201610-citibike-tripdata.csv+</family>
              <local-type>datetime</local-type>
              <aggregation>Year</aggregation>
              <approx-count>12401658</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start station id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[start station id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start station id</remote-alias>
              <ordinal>3</ordinal>
              <family>201610-citibike-tripdata.csv+</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>717</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start station name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[start station name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start station name</remote-alias>
              <ordinal>4</ordinal>
              <family>201610-citibike-tripdata.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>720</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start station latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[start station latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start station latitude</remote-alias>
              <ordinal>5</ordinal>
              <family>201610-citibike-tripdata.csv+</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>721</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>start station longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[start station longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>start station longitude</remote-alias>
              <ordinal>6</ordinal>
              <family>201610-citibike-tripdata.csv+</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>721</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>end station id</remote-name>
              <remote-type>20</remote-type>
              <local-name>[end station id]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>end station id</remote-alias>
              <ordinal>7</ordinal>
              <family>201610-citibike-tripdata.csv+</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>709</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>end station name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[end station name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>end station name</remote-alias>
              <ordinal>8</ordinal>
              <family>201610-citibike-tripdata.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>711</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>end station latitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[end station latitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>end station latitude</remote-alias>
              <ordinal>9</ordinal>
              <family>201610-citibike-tripdata.csv+</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>724</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>end station longitude</remote-name>
              <remote-type>5</remote-type>
              <local-name>[end station longitude]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>end station longitude</remote-alias>
              <ordinal>10</ordinal>
              <family>201610-citibike-tripdata.csv+</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>724</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>bikeid</remote-name>
              <remote-type>20</remote-type>
              <local-name>[bikeid]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>bikeid</remote-alias>
              <ordinal>11</ordinal>
              <family>201610-citibike-tripdata.csv+</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>14291</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>usertype</remote-name>
              <remote-type>129</remote-type>
              <local-name>[usertype]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>usertype</remote-alias>
              <ordinal>12</ordinal>
              <family>201610-citibike-tripdata.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>birth year</remote-name>
              <remote-type>20</remote-type>
              <local-name>[birth year]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>birth year</remote-alias>
              <ordinal>13</ordinal>
              <family>201610-citibike-tripdata.csv+</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>94</approx-count>
              <contains-null>true</contains-null>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>gender</remote-name>
              <remote-type>129</remote-type>
              <local-name>[gender]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>gender</remote-alias>
              <ordinal>14</ordinal>
              <family>201610-citibike-tripdata.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>Table Name</remote-name>
              <remote-type>129</remote-type>
              <local-name>[Table Name]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Table Name</remote-alias>
              <ordinal>15</ordinal>
              <family>201610-citibike-tripdata.csv+</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>12</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='LEN_RUS' />
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' dim-percentage='0.353846' group-percentage='0.184615' measure-ordering='alphabetic' measure-percentage='0.461538' show-structure='true' user-set-layout='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[io:Top 10 Stations:nk]' type='palette'>
            <map to='#59a14f'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_828380865701134336:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;Afternoon&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Night&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Morning&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='shape' field='[none:Calculation_828380865701134336:nk]' type='shape'>
            <map to=':filled/asterisk'>
              <bucket>&quot;Night&quot;</bucket>
            </map>
            <map to=':filled/circle'>
              <bucket>&quot;Afternoon&quot;</bucket>
            </map>
            <map to=':filled/circle'>
              <bucket>&quot;Morning&quot;</bucket>
            </map>
            <map to='circle'>
              <bucket>%null%</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[usr:Calculation_287385960824729605:nk]' type='palette'>
            <map to='#4f5864'>
              <bucket>&quot;No Repair Needed&quot;</bucket>
            </map>
            <map to='#b8163a'>
              <bucket>&quot;Repair Needed&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Top 10 Stations (copy):nk]' type='palette'>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
            <map to='#e15759'>
              <bucket>true</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Calculation_287385960806457345:nk]' type='palette'>
            <map to='#bab0ac'>
              <bucket>&quot;Male&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Unknown&quot;</bucket>
            </map>
            <map to='#ff9da7'>
              <bucket>&quot;Female&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Top 10 End Stations:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Bottom 10 End Stations:nk]' type='palette'>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
            <map to='#edc948'>
              <bucket>true</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.0zss38a06g8xmf17gnfqh0sto8mb'>
      <datasources>
        <datasource caption='Citi Bike Trip Data' name='federated.0zss38a06g8xmf17gnfqh0sto8mb' />
      </datasources>
      <datasource-dependencies datasource='federated.0zss38a06g8xmf17gnfqh0sto8mb'>
        <column caption='Start Time 1' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
        <column-instance column='[starttime]' derivation='Month-Trunc' name='[tmn:starttime:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
        <groupfilter function='level-members' level='[tmn:starttime:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
    </shared-view>
  </shared-views>
  <worksheets>
    <worksheet name='Avg Distance by Bike'>
      <table>
        <view>
          <datasources>
            <datasource caption='Citi Bike Trip Data' name='federated.0zss38a06g8xmf17gnfqh0sto8mb' />
          </datasources>
          <datasource-dependencies datasource='federated.0zss38a06g8xmf17gnfqh0sto8mb'>
            <column caption='Trip Distance' datatype='real' name='[Calculation_287385960818552836]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='3959 * ACOS &#13;&#10;( &#13;&#10;SIN(RADIANS([start station latitude])) * SIN(RADIANS([end station latitude])) + &#13;&#10;COS(RADIANS([start station latitude])) * COS(RADIANS([end station latitude])) * COS(RADIANS([end station longitude]) - RADIANS([start station longitude])) &#13;&#10;)' />
            </column>
            <column-instance column='[Calculation_287385960818552836]' derivation='Avg' name='[avg:Calculation_287385960818552836:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[bikeid]' role='dimension' type='ordinal' />
            <column aggregation='Avg' datatype='real' name='[end station latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[end station longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[bikeid]' derivation='None' name='[none:bikeid:ok]' pivot='key' type='ordinal' />
            <column aggregation='Avg' caption='Start Station Latitude 1' datatype='real' name='[start station latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude 1' datatype='real' name='[start station longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Time 1' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[starttime]' derivation='Month-Trunc' name='[tmn:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <computed-sort column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:bikeid:ok]' direction='DESC' using='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[avg:Calculation_287385960818552836:qk]' />
          <slices>
            <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[avg:Calculation_287385960818552836:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:bikeid:ok]</rows>
        <cols />
      </table>
      <simple-id uuid='{5DF57ED2-F4F6-43B6-AB12-32577828DAEE}' />
    </worksheet>
    <worksheet name='Avg Trip Distance'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Citi Bike Trip Data' name='federated.0zss38a06g8xmf17gnfqh0sto8mb' />
          </datasources>
          <datasource-dependencies datasource='federated.0zss38a06g8xmf17gnfqh0sto8mb'>
            <column caption='Trip Distance' datatype='real' name='[Calculation_287385960818552836]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='3959 * ACOS &#13;&#10;( &#13;&#10;SIN(RADIANS([start station latitude])) * SIN(RADIANS([end station latitude])) + &#13;&#10;COS(RADIANS([start station latitude])) * COS(RADIANS([end station latitude])) * COS(RADIANS([end station longitude]) - RADIANS([start station longitude])) &#13;&#10;)' />
            </column>
            <column-instance column='[Calculation_287385960818552836]' derivation='Avg' name='[avg:Calculation_287385960818552836:qk]' pivot='key' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[end station latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[end station longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Latitude 1' datatype='real' name='[start station latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude 1' datatype='real' name='[start station longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Time 1' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[starttime]' derivation='Month-Trunc' name='[tmn:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='font-size' value='18' />
            <format attr='font-weight' value='bold' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[avg:Calculation_287385960818552836:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{F95B09DC-505B-4298-A5C4-BC53B7A0938F}' />
    </worksheet>
    <worksheet name='Avg Trip Duration by Age/Gender'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='12'>&lt;Sheet Name&gt;</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontsize='10' italic='true'>(in minutes)</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Citi Bike Trip Data' name='federated.0zss38a06g8xmf17gnfqh0sto8mb' />
          </datasources>
          <datasource-dependencies datasource='federated.0zss38a06g8xmf17gnfqh0sto8mb'>
            <column aggregation='None' caption='Age (bin)' datatype='integer' name='[Age (bin)]' role='dimension' type='ordinal'>
              <calculation class='bin' decimals='0' formula='[Calculation_287385960808939522]' peg='0' size='5' />
            </column>
            <column caption='Gender Label' datatype='string' name='[Calculation_287385960806457345]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [gender] = &apos;1&apos; THEN &apos;Male&apos;&#13;&#10;ELSEIF  [gender] = &apos;2&apos; THEN &apos;Female&apos;&#13;&#10;ELSEIF  [gender] = &apos;0&apos; THEN &apos;Unknown&apos;&#13;&#10;END' />
            </column>
            <column caption='Age' datatype='integer' name='[Calculation_287385960808939522]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='2016 - [birth year]' />
            </column>
            <column caption='Minutes' datatype='real' name='[Calculation_287385960815513603]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='[tripduration] / 60' />
            </column>
            <column-instance column='[Calculation_287385960815513603]' derivation='Avg' name='[avg:Calculation_287385960815513603:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[birth year]' role='dimension' type='ordinal' />
            <column datatype='string' datatype-customized='true' name='[gender]' role='dimension' type='nominal' />
            <column-instance column='[Age (bin)]' derivation='None' name='[none:Age (bin):ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_287385960806457345]' derivation='None' name='[none:Calculation_287385960806457345:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_287385960808939522]' derivation='None' name='[none:Calculation_287385960808939522:ok]' pivot='key' type='ordinal' />
            <column caption='Start Time 1' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[starttime]' derivation='Month-Trunc' name='[tmn:starttime:ok]' pivot='key' type='ordinal' />
            <column datatype='integer' name='[tripduration]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:Calculation_287385960808939522:ok]'>
            <groupfilter expression='[Calculation_287385960808939522] &gt; 0 AND [Calculation_287385960808939522] &lt;= 90' function='filter' user:ui-marker='filter-by'>
              <groupfilter function='level-members' level='[none:Calculation_287385960808939522:ok]' user:ui-enumeration='all' user:ui-marker='enumerate' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:Calculation_287385960808939522:ok]</column>
            <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[avg:Calculation_287385960815513603:qk]' scope='rows' value='Avg. Trip Duration (in minutes)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[avg:Calculation_287385960815513603:qk]' value='' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[avg:Calculation_287385960815513603:qk]' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:Calculation_287385960806457345:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run fontcolor='#787878'>Age:</run>
                <run bold='true' fontcolor='#787878'>&lt;[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:Age (bin):ok]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Avg. Trip Duration:</run>
                <run bold='true'>&lt;[federated.0zss38a06g8xmf17gnfqh0sto8mb].[avg:Calculation_287385960815513603:qk]&gt;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[avg:Calculation_287385960815513603:qk]</rows>
        <cols>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:Age (bin):ok]</cols>
        <show-full-range>
          <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[Age (bin)]</column>
        </show-full-range>
      </table>
      <simple-id uuid='{070A1C44-5084-4209-A6BB-ADF5CFD1D393}' />
    </worksheet>
    <worksheet name='Due for Repair'>
      <table>
        <view>
          <datasources>
            <datasource caption='Citi Bike Trip Data' name='federated.0zss38a06g8xmf17gnfqh0sto8mb' />
          </datasources>
          <datasource-dependencies datasource='federated.0zss38a06g8xmf17gnfqh0sto8mb'>
            <column caption='Trip Distance' datatype='real' name='[Calculation_287385960818552836]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='3959 * ACOS &#13;&#10;( &#13;&#10;SIN(RADIANS([start station latitude])) * SIN(RADIANS([end station latitude])) + &#13;&#10;COS(RADIANS([start station latitude])) * COS(RADIANS([end station latitude])) * COS(RADIANS([end station longitude]) - RADIANS([start station longitude])) &#13;&#10;)' />
            </column>
            <column aggregation='Sum' datatype='integer' name='[bikeid]' role='dimension' type='ordinal' />
            <column aggregation='Avg' datatype='real' name='[end station latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[end station longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[bikeid]' derivation='None' name='[none:bikeid:ok]' pivot='key' type='ordinal' />
            <column aggregation='Avg' caption='Start Station Latitude 1' datatype='real' name='[start station latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude 1' datatype='real' name='[start station longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Time 1' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_287385960818552836]' derivation='Sum' name='[sum:Calculation_287385960818552836:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Month-Trunc' name='[tmn:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <computed-sort column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:bikeid:ok]' direction='DESC' using='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[sum:Calculation_287385960818552836:qk]' />
          <slices>
            <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' center='5000.0' field='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[sum:Calculation_287385960818552836:qk]' num-steps='2' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[sum:Calculation_287385960818552836:qk]' />
              <text column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[sum:Calculation_287385960818552836:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:bikeid:ok]</rows>
        <cols />
      </table>
      <simple-id uuid='{6FC46BCC-B296-4CBA-9B65-1F72D76D6955}' />
    </worksheet>
    <worksheet name='Male vs Female'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Citi Bike Trip Data' name='federated.0zss38a06g8xmf17gnfqh0sto8mb' />
          </datasources>
          <datasource-dependencies datasource='federated.0zss38a06g8xmf17gnfqh0sto8mb'>
            <column caption='Gender Label' datatype='string' name='[Calculation_287385960806457345]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='If [gender] = &apos;1&apos; THEN &apos;Male&apos;&#13;&#10;ELSEIF  [gender] = &apos;2&apos; THEN &apos;Female&apos;&#13;&#10;ELSEIF  [gender] = &apos;0&apos; THEN &apos;Unknown&apos;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column datatype='string' datatype-customized='true' name='[gender]' role='dimension' type='nominal' />
            <column-instance column='[Calculation_287385960806457345]' derivation='None' name='[none:Calculation_287385960806457345:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:Calculation_287385960806457345:nk]' ordering-type='Field' type='PctTotal' />
            </column-instance>
            <column caption='Start Time 1' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[starttime]' derivation='Month-Trunc' name='[tmn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[starttime]' derivation='Month-Trunc' name='[tmn:starttime:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:Calculation_287385960806457345:nk]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:Calculation_287385960806457345:nk]' member='&quot;Female&quot;' />
              <groupfilter function='member' level='[none:Calculation_287385960806457345:nk]' member='&quot;Male&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:Calculation_287385960806457345:nk]</column>
            <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[pcto:sum:Number of Records:qk:2]' scope='rows' value='% of Total Trips' />
            <format attr='title' class='0' field='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:qk]' scope='cols' value='Month ' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:Calculation_287385960806457345:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[pcto:sum:Number of Records:qk:2]</rows>
        <cols>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:qk]</cols>
      </table>
      <simple-id uuid='{A353C70C-1CEA-436D-93ED-1726047EC34D}' />
    </worksheet>
    <worksheet name='Peak Hours'>
      <table>
        <view>
          <datasources>
            <datasource caption='Citi Bike Trip Data' name='federated.0zss38a06g8xmf17gnfqh0sto8mb' />
          </datasources>
          <datasource-dependencies datasource='federated.0zss38a06g8xmf17gnfqh0sto8mb'>
            <column caption='Day Period' datatype='string' name='[Calculation_828380865701134336]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  DATEPART(&apos;hour&apos;,[starttime]) &gt;= 0 AND DATEPART(&apos;hour&apos;, [starttime]) &lt; 5 THEN &apos;Night&apos;&#13;&#10;ELSEIF  DATEPART(&apos;hour&apos;,[starttime]) &gt;= 5 AND DATEPART(&apos;hour&apos;, [starttime]) &lt; 13 THEN &apos;Morning&apos;&#13;&#10;ELSEIF  DATEPART(&apos;hour&apos;,[starttime]) &gt;= 13 AND DATEPART(&apos;hour&apos;, [starttime]) &lt; 21 THEN &apos;Afternoon&apos;&#13;&#10;ELSEIF  DATEPART(&apos;hour&apos;,[starttime]) &gt;= 21 AND DATEPART(&apos;hour&apos;, [starttime]) &lt; 24 THEN &apos;Night&apos;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Hour' name='[hr:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_828380865701134336]' derivation='None' name='[none:Calculation_828380865701134336:nk]' pivot='key' type='nominal' />
            <column caption='Start Time 1' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[starttime]' derivation='Month-Trunc' name='[tmn:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[hr:starttime:ok]' value='ih a' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:Calculation_828380865701134336:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[cnt:Number of Records:qk]</rows>
        <cols>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[hr:starttime:ok]</cols>
      </table>
      <simple-id uuid='{7D41E6A2-4E75-4171-AD67-0A1288B7D0AF}' />
    </worksheet>
    <worksheet name='Peak Hours (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Citi Bike Trip Data' name='federated.0zss38a06g8xmf17gnfqh0sto8mb' />
          </datasources>
          <datasource-dependencies datasource='federated.0zss38a06g8xmf17gnfqh0sto8mb'>
            <column caption='Day Period' datatype='string' name='[Calculation_828380865701134336]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  DATEPART(&apos;hour&apos;,[starttime]) &gt;= 0 AND DATEPART(&apos;hour&apos;, [starttime]) &lt; 5 THEN &apos;Night&apos;&#13;&#10;ELSEIF  DATEPART(&apos;hour&apos;,[starttime]) &gt;= 5 AND DATEPART(&apos;hour&apos;, [starttime]) &lt; 13 THEN &apos;Morning&apos;&#13;&#10;ELSEIF  DATEPART(&apos;hour&apos;,[starttime]) &gt;= 13 AND DATEPART(&apos;hour&apos;, [starttime]) &lt; 21 THEN &apos;Afternoon&apos;&#13;&#10;ELSEIF  DATEPART(&apos;hour&apos;,[starttime]) &gt;= 21 AND DATEPART(&apos;hour&apos;, [starttime]) &lt; 24 THEN &apos;Night&apos;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Hour' name='[hr:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_828380865701134336]' derivation='None' name='[none:Calculation_828380865701134336:nk]' pivot='key' type='nominal' />
            <column caption='Start Time 1' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[starttime]' derivation='Month-Trunc' name='[tmn:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[hr:starttime:ok]' value='ih a' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:Calculation_828380865701134336:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[cnt:Number of Records:qk]</rows>
        <cols>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[hr:starttime:ok]</cols>
      </table>
      <simple-id uuid='{7D28CD9A-F62B-4E1C-A91C-6C37BACD9F50}' />
    </worksheet>
    <worksheet name='Peak Hours Shapes'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>Peak Hours</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Citi Bike Trip Data' name='federated.0zss38a06g8xmf17gnfqh0sto8mb' />
          </datasources>
          <datasource-dependencies datasource='federated.0zss38a06g8xmf17gnfqh0sto8mb'>
            <column caption='Day Period' datatype='string' name='[Calculation_828380865701134336]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF  DATEPART(&apos;hour&apos;,[starttime]) &gt;= 0 AND DATEPART(&apos;hour&apos;, [starttime]) &lt; 5 THEN &apos;Night&apos;&#13;&#10;ELSEIF  DATEPART(&apos;hour&apos;,[starttime]) &gt;= 5 AND DATEPART(&apos;hour&apos;, [starttime]) &lt; 13 THEN &apos;Morning&apos;&#13;&#10;ELSEIF  DATEPART(&apos;hour&apos;,[starttime]) &gt;= 13 AND DATEPART(&apos;hour&apos;, [starttime]) &lt; 21 THEN &apos;Afternoon&apos;&#13;&#10;ELSEIF  DATEPART(&apos;hour&apos;,[starttime]) &gt;= 21 AND DATEPART(&apos;hour&apos;, [starttime]) &lt; 24 THEN &apos;Night&apos;&#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Count' name='[cnt:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Hour' name='[hr:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_828380865701134336]' derivation='None' name='[none:Calculation_828380865701134336:nk]' pivot='key' type='nominal' />
            <column caption='Start Time 1' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[starttime]' derivation='Month-Trunc' name='[tmn:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[cnt:Number of Records:qk]' scope='rows' value='#  of Trips' />
          </style-rule>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[hr:starttime:ok]' value='ih a' />
          </style-rule>
          <style-rule element='gridline'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Shape' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:Calculation_828380865701134336:nk]' />
              <shape column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:Calculation_828380865701134336:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.5272375345230103' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[cnt:Number of Records:qk]</rows>
        <cols>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[hr:starttime:ok]</cols>
      </table>
      <simple-id uuid='{537A3083-BB60-4FAB-B960-1679BE662309}' />
    </worksheet>
    <worksheet name='Ridership Growth'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Citi Bike Trip Data' name='federated.0zss38a06g8xmf17gnfqh0sto8mb' />
          </datasources>
          <datasource-dependencies datasource='federated.0zss38a06g8xmf17gnfqh0sto8mb'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcdf:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc diff-options='Relative' ordering-type='Columns' type='PctDiff'>
                <address>
                  <value>-1</value>
                </address>
              </table-calc>
            </column-instance>
            <column caption='Start Time 1' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Month-Trunc' name='[tmn:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zss38a06g8xmf17gnfqh0sto8mb].[sum:Number of Records:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zss38a06g8xmf17gnfqh0sto8mb].[pcdf:sum:Number of Records:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0zss38a06g8xmf17gnfqh0sto8mb].[sum:Number of Records:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zss38a06g8xmf17gnfqh0sto8mb].[pcdf:sum:Number of Records:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <slices>
            <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[:Measure Names]</column>
            <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[:Measure Names]' value='95' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]' value='120' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]</rows>
        <cols>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{5245E6D2-00C3-4E89-AA4B-ECDD081EBC1F}' />
    </worksheet>
    <worksheet name='Sheet 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='Citi Bike Trip Data' name='federated.0zss38a06g8xmf17gnfqh0sto8mb' />
          </datasources>
          <datasource-dependencies datasource='federated.0zss38a06g8xmf17gnfqh0sto8mb'>
            <column datatype='string' datatype-customized='true' name='[gender]' role='dimension' type='nominal' />
            <column-instance column='[gender]' derivation='None' name='[none:gender:nk]' pivot='key' type='nominal' />
            <column caption='Start Time 1' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[starttime]' derivation='Month-Trunc' name='[tmn:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:gender:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{3C7A7D20-4FCD-4E01-B782-568DD0AC3AAE}' />
    </worksheet>
    <worksheet name='Stations Map  - Bottom 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='Citi Bike Trip Data' name='federated.0zss38a06g8xmf17gnfqh0sto8mb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0zss38a06g8xmf17gnfqh0sto8mb'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Top 10 Stations (copy)]' derivation='InOut' name='[io:Top 10 Stations (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Start Station Latitude 1' datatype='real' name='[start station latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude 1' datatype='real' name='[start station longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name 1' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column caption='Start Time 1' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Month-Trunc' name='[tmn:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:start station longitude:qk]' field-type='quantitative' max='-8222855.7898639943' min='-8246375.6199201401' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:start station latitude:qk]' field-type='quantitative' max='4978328.3858960513' min='4964755.9069650955' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[io:Top 10 Stations (copy):nk]' />
              <lod column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:start station name:nk]' />
              <lod column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[sum:Number of Records:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='14'>&lt;[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:start station name:nk]&gt;</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Start Station Latitude:&#9;</run>
                <run bold='true'>&lt;[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:start station latitude:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Start Station Longitude:&#9;</run>
                <run bold='true'>&lt;[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:start station longitude:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Total Trips:&#9;</run>
                <run bold='true'>&lt;[federated.0zss38a06g8xmf17gnfqh0sto8mb].[sum:Number of Records:qk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:start station latitude:qk]</rows>
        <cols>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:start station longitude:qk]</cols>
      </table>
      <simple-id uuid='{151685B1-BC78-4CA4-96CF-349F0EC00BE8}' />
    </worksheet>
    <worksheet name='Stations Map - Bottom  10 (End) (2)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#666666' fontsize='11'>Bottom 10 Stations for Ending a Journey</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Citi Bike Trip Data' name='federated.0zss38a06g8xmf17gnfqh0sto8mb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0zss38a06g8xmf17gnfqh0sto8mb'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Avg' datatype='real' name='[end station latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[end station longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='string' name='[end station name]' role='dimension' type='nominal' />
            <column-instance column='[Bottom 10 End Stations]' derivation='InOut' name='[io:Bottom 10 End Stations:nk]' pivot='key' type='nominal' />
            <column-instance column='[end station latitude]' derivation='None' name='[none:end station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end station longitude]' derivation='None' name='[none:end station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
            <column caption='Start Time 1' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Month-Trunc' name='[tmn:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station latitude:qk]' included-values='in-range'>
            <min>1.0</min>
          </filter>
          <filter class='quantitative' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station longitude:qk]' included-values='in-range'>
            <min>-74.083639399999996</min>
            <max>-1.0</max>
          </filter>
          <slices>
            <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]</column>
            <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station longitude:qk]</column>
            <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station latitude:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station longitude:qk]' field-type='quantitative' max='-8230423.7234128499' min='-8249382.6208526995' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station latitude:qk]' field-type='quantitative' max='4978760.9641618328' min='4966867.1783426953' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[io:Bottom 10 End Stations:nk]' />
              <lod column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station name:nk]' />
              <lod column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[sum:Number of Records:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='14'>&lt;[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station name:nk]&gt;</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>End Station Latitude:&#9;</run>
                <run bold='true'>&lt;[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station latitude:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>End Station Longitude:&#9;</run>
                <run bold='true'>&lt;[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station longitude:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'># Trips:&#9;</run>
                <run bold='true'>&lt;[federated.0zss38a06g8xmf17gnfqh0sto8mb].[sum:Number of Records:qk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.86756908893585205' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station latitude:qk]</rows>
        <cols>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station longitude:qk]</cols>
      </table>
      <simple-id uuid='{49D8F74B-E8E0-4DC7-8692-8A26C20D39C0}' />
    </worksheet>
    <worksheet name='Stations Map - Top 10'>
      <table>
        <view>
          <datasources>
            <datasource caption='Citi Bike Trip Data' name='federated.0zss38a06g8xmf17gnfqh0sto8mb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0zss38a06g8xmf17gnfqh0sto8mb'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Top 10 Stations]' derivation='InOut' name='[io:Top 10 Stations:nk]' pivot='key' type='nominal' />
            <column-instance column='[start station latitude]' derivation='None' name='[none:start station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station longitude]' derivation='None' name='[none:start station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column aggregation='Avg' caption='Start Station Latitude 1' datatype='real' name='[start station latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude 1' datatype='real' name='[start station longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Station Name 1' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column caption='Start Time 1' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[starttime]' derivation='Month-Trunc' name='[tmn:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:start station longitude:qk]' field-type='quantitative' max='-8222855.7898639943' min='-8246375.6199201401' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:start station latitude:qk]' field-type='quantitative' max='4978328.3858960513' min='4964755.9069650955' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[io:Top 10 Stations:nk]' />
              <lod column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:start station name:nk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='14'>&lt;[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:start station name:nk]&gt;</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Start Station Latitude:&#9;</run>
                <run bold='true'>&lt;[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:start station latitude:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>Start Station Longitude:&#9;</run>
                <run bold='true'>&lt;[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:start station longitude:qk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:start station latitude:qk]</rows>
        <cols>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:start station longitude:qk]</cols>
      </table>
      <simple-id uuid='{5A9B7CD4-526F-4F50-A097-55C297D41477}' />
    </worksheet>
    <worksheet name='Stations Map - Top 10 (End)'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontcolor='#666666' fontsize='11'>Top 10 Stations for Ending a Journey</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Citi Bike Trip Data' name='federated.0zss38a06g8xmf17gnfqh0sto8mb' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0zss38a06g8xmf17gnfqh0sto8mb'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column aggregation='Avg' datatype='real' name='[end station latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[end station longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column datatype='string' name='[end station name]' role='dimension' type='nominal' />
            <column-instance column='[Top 10 End Stations]' derivation='InOut' name='[io:Top 10 End Stations:nk]' pivot='key' type='nominal' />
            <column-instance column='[end station latitude]' derivation='None' name='[none:end station latitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end station longitude]' derivation='None' name='[none:end station longitude:qk]' pivot='key' type='quantitative' />
            <column-instance column='[end station name]' derivation='None' name='[none:end station name:nk]' pivot='key' type='nominal' />
            <column caption='Start Time 1' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Month-Trunc' name='[tmn:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station latitude:qk]' included-values='in-range'>
            <min>1.0</min>
          </filter>
          <filter class='quantitative' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station longitude:qk]' included-values='in-range'>
            <min>-74.083639399999996</min>
            <max>-1.0</max>
          </filter>
          <slices>
            <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]</column>
            <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station longitude:qk]</column>
            <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station latitude:qk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station longitude:qk]' field-type='quantitative' max='-8212989.6702711126' min='-8250907.4651508108' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station latitude:qk]' field-type='quantitative' max='4982882.4461163497' min='4959594.3514275523' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[io:Top 10 End Stations:nk]' />
              <lod column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station name:nk]' />
              <lod column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[sum:Number of Records:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true' fontalignment='1' fontsize='14'>&lt;[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station name:nk]&gt;</run>
                <run fontalignment='1'>Æ&#10;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>End Station Latitude:&#9;</run>
                <run bold='true'>&lt;[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station latitude:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>End Station Longitude:&#9;</run>
                <run bold='true'>&lt;[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station longitude:qk]&gt;</run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'># Trips:&#9;</run>
                <run bold='true'>&lt;[federated.0zss38a06g8xmf17gnfqh0sto8mb].[sum:Number of Records:qk]&gt;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
                <format attr='size' value='0.86756908893585205' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station latitude:qk]</rows>
        <cols>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station longitude:qk]</cols>
      </table>
      <simple-id uuid='{9876F640-2AAC-406A-87C0-C7346EAB23FC}' />
    </worksheet>
    <worksheet name='Stations Table'>
      <table>
        <view>
          <datasources>
            <datasource caption='Citi Bike Trip Data' name='federated.0zss38a06g8xmf17gnfqh0sto8mb' />
          </datasources>
          <datasource-dependencies datasource='federated.0zss38a06g8xmf17gnfqh0sto8mb'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Name 1' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column caption='Start Time 1' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Month-Trunc' name='[tmn:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:start station name:nk]'>
            <groupfilter count='10' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:start station name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:start station name:nk]' direction='DESC' using='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:start station name:nk]</column>
            <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:start station name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{C34811E4-F5F1-4E6F-B091-243908C9D52B}' />
    </worksheet>
    <worksheet name='Stations Table (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='Citi Bike Trip Data' name='federated.0zss38a06g8xmf17gnfqh0sto8mb' />
          </datasources>
          <datasource-dependencies datasource='federated.0zss38a06g8xmf17gnfqh0sto8mb'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[start station name]' derivation='None' name='[none:start station name:nk]' pivot='key' type='nominal' />
            <column caption='Start Station Name 1' datatype='string' name='[start station name]' role='dimension' type='nominal' />
            <column caption='Start Time 1' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Month-Trunc' name='[tmn:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:start station name:nk]'>
            <groupfilter count='10' end='bottom' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Number of Records])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:start station name:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <computed-sort column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:start station name:nk]' direction='ASC' using='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[sum:Number of Records:qk]' />
          <slices>
            <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:start station name:nk]</column>
            <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:start station name:nk]</rows>
        <cols />
      </table>
      <simple-id uuid='{B3512766-A832-4472-80AA-08804D1825A0}' />
    </worksheet>
    <worksheet name='Total Trips'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Citi Bike Trip Data' name='federated.0zss38a06g8xmf17gnfqh0sto8mb' />
          </datasources>
          <datasource-dependencies datasource='federated.0zss38a06g8xmf17gnfqh0sto8mb'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column caption='Start Time 1' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Month-Trunc' name='[tmn:starttime:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='text-align' value='center' />
            <format attr='font-size' value='24' />
            <format attr='font-weight' value='bold' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='normal' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]' value='Month Filter'>
              <formatted-text>
                <run fontalignment='1'>Month Filter</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{1698CA30-AD73-403D-BB9B-031140D9FE41}' />
    </worksheet>
    <worksheet name='User Type Proportions'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Citi Bike Trip Data' name='federated.0zss38a06g8xmf17gnfqh0sto8mb' />
          </datasources>
          <datasource-dependencies datasource='federated.0zss38a06g8xmf17gnfqh0sto8mb'>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[usertype]' derivation='None' name='[none:usertype:nk]' pivot='key' type='nominal' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[pcto:sum:Number of Records:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Rows' type='PctTotal' />
            </column-instance>
            <column caption='Start Time 1' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[starttime]' derivation='Month-Trunc' name='[tmn:starttime:ok]' pivot='key' type='ordinal' />
            <column caption='Usertype' datatype='string' name='[usertype]' role='dimension' type='nominal' />
          </datasource-dependencies>
          <slices>
            <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:usertype:nk]' value='102' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='cols' value='false' />
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[pcto:sum:Number of Records:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]</rows>
        <cols>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:usertype:nk]</cols>
      </table>
      <simple-id uuid='{B3CF64C6-0D6F-41B9-8D41-E635166ACD9E}' />
    </worksheet>
    <worksheet name='Utilization By BikeID'>
      <layout-options>
        <title>
          <formatted-text>
            <run fontalignment='1' fontsize='12'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Citi Bike Trip Data' name='federated.0zss38a06g8xmf17gnfqh0sto8mb' />
          </datasources>
          <datasource-dependencies datasource='federated.0zss38a06g8xmf17gnfqh0sto8mb'>
            <column caption='Trip Distance' datatype='real' name='[Calculation_287385960818552836]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='3959 * ACOS &#13;&#10;( &#13;&#10;SIN(RADIANS([start station latitude])) * SIN(RADIANS([end station latitude])) + &#13;&#10;COS(RADIANS([start station latitude])) * COS(RADIANS([end station latitude])) * COS(RADIANS([end station longitude]) - RADIANS([start station longitude])) &#13;&#10;)' />
            </column>
            <column caption='Repair/No Repair' datatype='string' name='[Calculation_287385960824729605]' role='measure' type='nominal'>
              <calculation class='tableau' formula='IF  sum([Calculation_287385960818552836]) &gt; 5000 THEN &apos;Repair Needed&apos;&#13;&#10;ELSE &apos;No Repair Needed&apos;&#13;&#10;END' />
            </column>
            <column caption='Total Distance' datatype='real' name='[Calculation_287385960825262086]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Calculation_287385960818552836])' />
            </column>
            <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
              <calculation class='tableau' formula='1' />
            </column>
            <column-instance column='[Calculation_287385960818552836]' derivation='Avg' name='[avg:Calculation_287385960818552836:qk]' pivot='key' type='quantitative' />
            <column aggregation='Sum' datatype='integer' name='[bikeid]' role='dimension' type='ordinal' />
            <column aggregation='Avg' datatype='real' name='[end station latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' datatype='real' name='[end station longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column-instance column='[bikeid]' derivation='None' name='[none:bikeid:ok]' pivot='key' type='ordinal' />
            <column aggregation='Avg' caption='Start Station Latitude 1' datatype='real' name='[start station latitude]' role='dimension' semantic-role='[Geographical].[Latitude]' type='quantitative' />
            <column aggregation='Avg' caption='Start Station Longitude 1' datatype='real' name='[start station longitude]' role='dimension' semantic-role='[Geographical].[Longitude]' type='quantitative' />
            <column caption='Start Time 1' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_287385960818552836]' derivation='Sum' name='[sum:Calculation_287385960818552836:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Number of Records]' derivation='Sum' name='[sum:Number of Records:qk]' pivot='key' type='quantitative' />
            <column-instance column='[starttime]' derivation='Month-Trunc' name='[tmn:starttime:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_287385960824729605]' derivation='User' name='[usr:Calculation_287385960824729605:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_287385960825262086]' derivation='User' name='[usr:Calculation_287385960825262086:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zss38a06g8xmf17gnfqh0sto8mb].[avg:Calculation_287385960818552836:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zss38a06g8xmf17gnfqh0sto8mb].[sum:Number of Records:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0zss38a06g8xmf17gnfqh0sto8mb].[usr:Calculation_287385960825262086:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0zss38a06g8xmf17gnfqh0sto8mb].[avg:Calculation_287385960818552836:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zss38a06g8xmf17gnfqh0sto8mb].[sum:Number of Records:qk]&quot;</bucket>
              <bucket>&quot;[federated.0zss38a06g8xmf17gnfqh0sto8mb].[usr:Calculation_287385960825262086:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <computed-sort column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:bikeid:ok]' direction='DESC' using='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[sum:Calculation_287385960818552836:qk]' />
          <slices>
            <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[:Measure Names]</column>
            <column>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='width' field='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[:Measure Names]' value='125' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='5000.0' field='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[sum:Calculation_287385960818552836:qk]' num-steps='2' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
            <encoding attr='color' center='5000.0' field='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[avg:Calculation_287385960818552836:qk]' num-steps='2' palette='red_green_diverging_10_0' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='legend'>
            <format attr='col-width' field='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[usr:Calculation_287385960824729605:nk]' value='180' />
          </style-rule>
          <style-rule element='quick-filter'>
            <format attr='title' field='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]' value='Month Filter'>
              <formatted-text>
                <run fontalignment='1'>Month Filter</run>
              </formatted-text>
            </format>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[usr:Calculation_287385960824729605:nk]' />
              <text column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[Multiple Values]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minwidth' value='-1' />
                <format attr='maxwidth' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:bikeid:ok]</rows>
        <cols>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{6784122D-A522-4A3D-AF73-C0B0F9F70B60}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='Dashboard 1'>
      <style />
      <size maxheight='1300' maxwidth='1000' minheight='1300' minwidth='1000' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Citi Bike Trip Data' name='federated.0zss38a06g8xmf17gnfqh0sto8mb' />
      </datasources>
      <datasource-dependencies datasource='federated.0zss38a06g8xmf17gnfqh0sto8mb'>
        <column caption='Start Time 1' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
        <column-instance column='[starttime]' derivation='Month-Trunc' name='[tmn:starttime:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98770' id='103' param='horz' type='layout-flow' w='98400' x='800' y='615'>
            <zone h='98770' id='73' param='horz' type='layout-flow' w='98400' x='800' y='615'>
              <zone h='98770' id='71' type='layout-basic' w='98400' x='800' y='615'>
                <zone h='93432' id='27' param='horz' type='layout-flow' w='98400' x='800' y='5953'>
                  <zone h='93432' id='25' type='layout-basic' w='98400' x='800' y='5953'>
                    <zone h='81420' id='12' param='horz' type='layout-flow' w='98400' x='800' y='17965'>
                      <zone h='81420' id='10' type='layout-basic' w='98400' x='800' y='17965'>
                        <zone h='37847' id='7' param='horz' type='layout-flow' w='98400' x='800' y='61538'>
                          <zone h='37847' id='5' type='layout-basic' w='98400' x='800' y='61538'>
                            <zone h='17231' id='3' name='Stations Map - Top 10' show-title='false' w='47899' x='800' y='61538'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='17231' id='70' name='Stations Map  - Bottom 10' show-title='false' w='50501' x='48699' y='61538'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='20616' id='101' name='Stations Map - Top 10 (End)' w='47899' x='800' y='78769'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                            <zone h='20616' id='105' name='Stations Map - Bottom  10 (End) (2)' w='50501' x='48699' y='78769'>
                              <zone-style>
                                <format attr='border-color' value='#000000' />
                                <format attr='border-style' value='none' />
                                <format attr='border-width' value='0' />
                                <format attr='margin' value='4' />
                              </zone-style>
                            </zone>
                          </zone>
                        </zone>
                        <zone h='16684' id='21' param='horz' type='layout-flow' w='98400' x='800' y='17965'>
                          <zone h='16684' id='9' name='Ridership Growth' w='42880' x='800' y='17965'>
                            <layout-cache cell-count-w='2' non-cell-size-w='138' type-h='cell' type-w='cell' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                          <zone h='16684' id='14' name='User Type Proportions' w='55520' x='43680' y='17965'>
                            <layout-cache cell-count-w='3' non-cell-size-w='119' type-h='fixed' type-w='cell' />
                            <zone-style>
                              <format attr='border-color' value='#000000' />
                              <format attr='border-style' value='none' />
                              <format attr='border-width' value='0' />
                              <format attr='margin' value='4' />
                            </zone-style>
                          </zone>
                        </zone>
                        <zone h='22813' id='24' name='Peak Hours Shapes' w='98400' x='800' y='34649'>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='4076' id='35' type='text' w='49200' x='800' y='57462'>
                          <formatted-text>
                            <run fontalignment='1' fontsize='11'>Top 10 Stations for Starting a Journey</run>
                          </formatted-text>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                        <zone h='4076' id='74' type='text' w='49200' x='50000' y='57462'>
                          <formatted-text>
                            <run fontalignment='1' fontsize='11'>Bottom 10 Stations for Starting a Journey</run>
                          </formatted-text>
                          <zone-style>
                            <format attr='border-color' value='#000000' />
                            <format attr='border-style' value='none' />
                            <format attr='border-width' value='0' />
                            <format attr='margin' value='4' />
                          </zone-style>
                        </zone>
                      </zone>
                    </zone>
                    <zone h='7257' id='19' name='Total Trips' w='98400' x='800' y='5953'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='4755' id='20' mode='checkdropdown' name='Total Trips' param='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]' show-apply='true' type='filter' values='database' w='17700' x='41497' y='13210'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='4755' id='22' type='empty' w='40697' x='800' y='13210'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='4755' id='23' type='empty' w='40003' x='59197' y='13210'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
                <zone forceUpdate='true' h='5338' id='34' type='text' w='98400' x='800' y='615'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontsize='18'>Citi Bike Dashboard</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='2100' minheight='2100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='114' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98770' id='115' param='vert' type='layout-flow' w='98400' x='800' y='615'>
                <zone forceUpdate='true' h='5338' id='34' type='text' w='98400' x='800' y='615'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontsize='18'>Citi Bike Dashboard</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4755' id='20' mode='checkdropdown' name='Total Trips' param='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]' show-apply='true' type='filter' values='database' w='17700' x='41497' y='13210'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='87' h='7257' id='19' is-fixed='true' name='Total Trips' w='98400' x='800' y='5953'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='208' h='16684' id='9' is-fixed='true' name='Ridership Growth' w='42880' x='800' y='17965'>
                  <layout-cache cell-count-w='2' non-cell-size-w='138' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='208' h='16684' id='14' is-fixed='true' name='User Type Proportions' w='55520' x='43680' y='17965'>
                  <layout-cache cell-count-w='3' non-cell-size-w='119' type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='22813' id='24' is-fixed='true' name='Peak Hours Shapes' w='98400' x='800' y='34649'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4076' id='35' type='text' w='49200' x='800' y='57462'>
                  <formatted-text>
                    <run fontalignment='1' fontsize='11'>Top 10 Stations for Starting a Journey</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4076' id='74' type='text' w='49200' x='50000' y='57462'>
                  <formatted-text>
                    <run fontalignment='1' fontsize='11'>Bottom 10 Stations for Starting a Journey</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='216' h='17231' id='3' is-fixed='true' name='Stations Map - Top 10' show-title='false' w='47899' x='800' y='61538'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='216' h='17231' id='70' is-fixed='true' name='Stations Map  - Bottom 10' show-title='false' w='50501' x='48699' y='61538'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='260' h='20616' id='101' is-fixed='true' name='Stations Map - Top 10 (End)' w='47899' x='800' y='78769'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='260' h='20616' id='105' is-fixed='true' name='Stations Map - Bottom  10 (End) (2)' w='50501' x='48699' y='78769'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{3C4848F1-8ECE-4892-B054-F789223F340A}' />
    </dashboard>
    <dashboard name='Dashboard 2'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' sizing-mode='fixed' />
      <datasources>
        <datasource caption='Citi Bike Trip Data' name='federated.0zss38a06g8xmf17gnfqh0sto8mb' />
      </datasources>
      <datasource-dependencies datasource='federated.0zss38a06g8xmf17gnfqh0sto8mb'>
        <column caption='Start Time 1' datatype='datetime' name='[starttime]' role='dimension' type='ordinal' />
        <column-instance column='[starttime]' derivation='Month-Trunc' name='[tmn:starttime:ok]' pivot='key' type='ordinal' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='4' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98000' id='28' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
            <zone h='98000' id='22' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
              <zone h='98000' id='15' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                <zone h='98000' id='7' param='horz' type='layout-flow' w='98400' x='800' y='1000'>
                  <zone h='98000' id='5' type='layout-basic' w='98400' x='800' y='1000'>
                    <zone h='44374' id='3' name='Male vs Female' w='42399' x='800' y='50625'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='44374' id='13' name='Avg Trip Duration by Age/Gender' w='56001' x='43199' y='50625'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='4001' id='16' name='Avg Trip Duration by Age/Gender' pane-specification-id='0' param='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:Calculation_287385960806457345:nk]' show-title='false' type='color' w='70601' x='28599' y='94999'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='8875' id='17' name='Avg Trip Distance' w='98400' x='800' y='1000'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='4001' id='23' name='Utilization By BikeID' pane-specification-id='0' param='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[usr:Calculation_287385960824729605:nk]' show-title='false' type='color' w='98400' x='800' y='46624'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='29749' id='20' name='Utilization By BikeID' w='98400' x='800' y='16875'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='4001' id='24' type='empty' w='27799' x='800' y='94999'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='7000' id='29' mode='checkdropdown' name='Utilization By BikeID' param='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]' show-apply='true' type='filter' values='database' w='11500' x='44000' y='9875'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='7000' id='30' type='empty' w='43200' x='800' y='9875'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                    <zone h='7000' id='31' type='empty' w='43700' x='55500' y='9875'>
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='72' type='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='73' param='vert' type='layout-flow' w='98400' x='800' y='1000'>
                <zone fixed-size='63' h='8875' id='17' is-fixed='true' name='Avg Trip Distance' w='98400' x='800' y='1000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='7000' id='29' mode='checkdropdown' name='Utilization By BikeID' param='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]' show-apply='true' type='filter' values='database' w='11500' x='44000' y='9875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='230' h='29749' id='20' is-fixed='true' name='Utilization By BikeID' w='98400' x='800' y='16875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4001' id='23' name='Utilization By BikeID' pane-specification-id='0' param='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[usr:Calculation_287385960824729605:nk]' show-title='false' type='color' w='98400' x='800' y='46624'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44374' id='3' is-fixed='true' name='Male vs Female' w='42399' x='800' y='50625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='44374' id='13' is-fixed='true' name='Avg Trip Duration by Age/Gender' w='56001' x='43199' y='50625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='4001' id='16' name='Avg Trip Duration by Age/Gender' pane-specification-id='0' param='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:Calculation_287385960806457345:nk]' show-title='false' type='color' w='70601' x='28599' y='94999'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{5F3B8B6D-4157-488D-BECB-4BC6AA41D436}' />
    </dashboard>
    <dashboard name='Story 1' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='4' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Jan - Mar' captured-sheet='Dashboard 2' id='1'>
                    <capturedDeltas>
                      <worksheet name='Avg Trip Distance'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-01-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-02-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-03-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Avg Trip Duration by Age/Gender'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-01-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-02-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-03-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Male vs Female'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-01-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-02-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-03-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Utilization By BikeID'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-01-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-02-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-03-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Apr - Jun' captured-sheet='Dashboard 2' id='2'>
                    <capturedDeltas>
                      <worksheet name='Avg Trip Distance'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-04-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-05-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-06-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Avg Trip Duration by Age/Gender'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-04-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-05-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-06-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Male vs Female'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-04-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-05-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-06-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Utilization By BikeID'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-04-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-05-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-06-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Jul - Sept' captured-sheet='Dashboard 2' id='3'>
                    <capturedDeltas>
                      <worksheet name='Avg Trip Distance'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-07-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-08-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-09-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Avg Trip Duration by Age/Gender'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-07-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-08-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-09-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Male vs Female'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-07-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-08-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-09-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Utilization By BikeID'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-07-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-08-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-09-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Oct - Dec  ' captured-sheet='Dashboard 2' id='4'>
                    <capturedDeltas>
                      <worksheet name='Avg Trip Distance'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-10-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-11-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-12-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Avg Trip Duration by Age/Gender'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-10-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-11-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-12-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Male vs Female'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-10-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-11-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-12-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Utilization By BikeID'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-10-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-11-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-12-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{F6E3B888-8B4E-40D7-B3C0-13CEB6E624E5}' />
    </dashboard>
    <dashboard name='Story 2' type='storyboard'>
      <style />
      <size maxheight='964' maxwidth='1016' minheight='964' minwidth='1016' />
      <zones>
        <zone h='100000' id='2' type='layout-basic' w='100000' x='0' y='0'>
          <zone h='98340' id='1' param='vert' removable='false' type='layout-flow' w='98426' x='787' y='830'>
            <zone h='3423' id='3' type='title' w='98426' x='787' y='830' />
            <zone h='10477' id='4' is-fixed='true' paired-zone-id='5' removable='false' type='flipboard-nav' w='98426' x='787' y='4253' />
            <zone h='84440' id='5' paired-zone-id='4' removable='false' type='flipboard' w='98426' x='787' y='14730'>
              <flipboard active-id='6' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Jan- Mar' captured-sheet='Dashboard 1' id='1'>
                    <capturedDeltas>
                      <worksheet name='Peak Hours Shapes'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-01-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-02-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-03-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Ridership Growth'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-01-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-02-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-03-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Stations Map  - Bottom 10'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-01-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-02-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-03-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Stations Map - Bottom  10 (End) (2)'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-01-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-02-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-03-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Stations Map - Top 10'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-01-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-02-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-03-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Stations Map - Top 10 (End)'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-01-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-02-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-03-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Total Trips'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-01-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-02-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-03-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='User Type Proportions'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-01-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-02-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-03-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Apr - June' captured-sheet='Dashboard 1' id='3'>
                    <capturedDeltas>
                      <worksheet name='Peak Hours Shapes'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-04-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-05-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-06-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Ridership Growth'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-04-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-05-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-06-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Stations Map  - Bottom 10'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-04-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-05-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-06-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Stations Map - Bottom  10 (End) (2)'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-04-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-05-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-06-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Stations Map - Top 10'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-04-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-05-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-06-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Stations Map - Top 10 (End)'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-04-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-05-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-06-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Total Trips'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-04-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-05-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-06-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='User Type Proportions'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-04-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-05-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-06-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Jul-Sept' captured-sheet='Dashboard 1' id='5'>
                    <capturedDeltas>
                      <worksheet name='Peak Hours Shapes'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-07-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-08-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-09-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Ridership Growth'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-07-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-08-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-09-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Stations Map  - Bottom 10'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-07-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-08-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-09-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Stations Map - Bottom  10 (End) (2)'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-07-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-08-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-09-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Stations Map - Top 10'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-07-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-08-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-09-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Stations Map - Top 10 (End)'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-07-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-08-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-09-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Total Trips'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-07-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-08-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-09-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='User Type Proportions'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-07-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-08-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-09-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                  <story-point caption='Oct-Dec' captured-sheet='Dashboard 1' id='6'>
                    <currentDeltas>
                      <worksheet name='Peak Hours Shapes'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-10-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-11-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-12-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Ridership Growth'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-10-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-11-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-12-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Stations Map  - Bottom 10'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-10-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-11-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-12-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Stations Map - Bottom  10 (End) (2)'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-10-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-11-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-12-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Stations Map - Top 10'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-10-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-11-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-12-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Stations Map - Top 10 (End)'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-10-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-11-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-12-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Total Trips'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-10-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-11-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-12-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='User Type Proportions'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-10-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-11-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-12-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                    </currentDeltas>
                    <capturedDeltas>
                      <worksheet name='Peak Hours Shapes'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-04-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-05-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-06-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Ridership Growth'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-04-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-05-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-06-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Stations Map  - Bottom 10'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-04-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-05-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-06-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Stations Map - Bottom  10 (End) (2)'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-04-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-05-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-06-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Stations Map - Top 10'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-04-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-05-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-06-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Stations Map - Top 10 (End)'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-04-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-05-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-06-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='Total Trips'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-04-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-05-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-06-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                      <worksheet name='User Type Proportions'>
                        <filter class='categorical' column='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]'>
                          <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-04-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-05-01 00:00:00#' />
                            <groupfilter function='member' level='[tmn:starttime:ok]' member='#2016-06-01 00:00:00#' />
                          </groupfilter>
                        </filter>
                      </worksheet>
                    </capturedDeltas>
                  </story-point>
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{FD4CFF5D-D0C5-4B75-B0B2-C29BC72946F1}' />
    </dashboard>
  </dashboards>
  <windows source-height='30'>
    <window class='worksheet' name='Total Trips'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]' show-apply='true' show-morefewerbutton='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{91697C02-F0B2-47C0-B5F7-188B203DB1D2}' />
    </window>
    <window class='worksheet' name='Ridership Growth'>
      <cards>
        <edge name='left'>
          <strip size='213'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{52036789-610E-4C47-9EE3-7B3903FA8BAD}' />
    </window>
    <window class='worksheet' name='User Type Proportions'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]' show-morefewerbutton='false' type='filter' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{50D41939-4F4B-4A21-AF7B-39C9C38EB19F}' />
    </window>
    <window class='worksheet' name='Peak Hours'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]' show-morefewerbutton='false' type='filter' />
            <card pane-specification-id='0' param='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:Calculation_828380865701134336:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{2FDCF201-7124-443E-AB72-1B96FDE77D2F}' />
    </window>
    <window class='worksheet' name='Peak Hours (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:Calculation_828380865701134336:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{853610AA-8DEC-4DBC-97DE-05AA5A612C6A}' />
    </window>
    <window class='worksheet' name='Peak Hours Shapes'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:Calculation_828380865701134336:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:Calculation_828380865701134336:nk]' type='shape' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{F10A3E0A-4E2B-495F-9D8C-E1F6D708C455}' />
    </window>
    <window class='worksheet' name='Stations Map - Top 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[io:Top 10 Stations:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{97C51C35-3748-4BE2-BF11-AC9B7FCB93B8}' />
    </window>
    <window class='worksheet' name='Stations Map - Top 10 (End)'>
      <cards>
        <edge name='left'>
          <strip size='225'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[io:Top 10 End Stations:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[io:Top 10 End Stations:nk]</field>
            <field>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station latitude:qk]</field>
            <field>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station longitude:qk]</field>
            <field>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{3F844EFB-B34F-4AD7-B66B-60EFB096FB25}' />
    </window>
    <window class='worksheet' name='Stations Map - Bottom  10 (End) (2)'>
      <cards>
        <edge name='left'>
          <strip size='225'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[io:Bottom 10 End Stations:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[io:Bottom 10 End Stations:nk]</field>
            <field>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station latitude:qk]</field>
            <field>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station longitude:qk]</field>
            <field>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:end station name:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{9DF6EA1D-EEFC-4660-B466-A9C597726978}' />
    </window>
    <window class='worksheet' name='Stations Map  - Bottom 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[io:Top 10 Stations (copy):nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{EBB6C0A8-06F5-4BD6-8F6D-5D832BC5F96C}' />
    </window>
    <window class='worksheet' name='Stations Table'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{A931539F-DE5D-4B49-876C-16E6923F82E7}' />
    </window>
    <window class='worksheet' name='Stations Table (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1895AACF-67A1-4E09-8C47-FBC501247E70}' />
    </window>
    <window class='worksheet' name='Sheet 10'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{964E0ECD-AB3C-4A04-A7F3-49FEBC61EAA9}' />
    </window>
    <window class='worksheet' name='Male vs Female'>
      <cards>
        <edge name='left'>
          <strip size='186'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[tmn:starttime:ok]' type='filter' />
            <card pane-specification-id='0' param='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:Calculation_287385960806457345:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{114FCFD2-6EF9-48A4-8FB1-83253365BE58}' />
    </window>
    <window class='worksheet' name='Avg Trip Duration by Age/Gender'>
      <cards>
        <edge name='left'>
          <strip size='139'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[none:Calculation_287385960806457345:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <default-map-tool-selection tool='2' />
      </viewpoint>
      <simple-id uuid='{FD09D3DB-1E84-482C-857A-79096B67586A}' />
    </window>
    <window class='worksheet' name='Avg Trip Distance'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{7BEA4502-6586-4DE6-AE13-5F66DD45520F}' />
    </window>
    <window class='worksheet' name='Avg Distance by Bike'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{AE2D610A-4375-4D62-9C39-278E906067B9}' />
    </window>
    <window class='worksheet' name='Due for Repair'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[sum:Calculation_287385960818552836:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{8615D0FF-E61A-493A-B293-D9D6FD16D43C}' />
    </window>
    <window class='worksheet' name='Utilization By BikeID'>
      <cards>
        <edge name='left'>
          <strip size='158'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0zss38a06g8xmf17gnfqh0sto8mb].[usr:Calculation_287385960824729605:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{1185F831-06DF-4616-9160-588FE5AAB1E4}' />
    </window>
    <window class='dashboard' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Peak Hours Shapes'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Ridership Growth'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='Stations Map  - Bottom 10'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Stations Map - Bottom  10 (End) (2)'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[io:Bottom 10 End Stations:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Stations Map - Top 10'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Stations Map - Top 10 (End)'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0zss38a06g8xmf17gnfqh0sto8mb].[io:Top 10 End Stations:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Total Trips'>
          <zoom type='fit-width' />
        </viewpoint>
        <viewpoint name='User Type Proportions'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='20' />
      <simple-id uuid='{41626453-E62E-498D-8157-0AF10726A0C9}' />
    </window>
    <window class='dashboard' name='Dashboard 2'>
      <viewpoints>
        <viewpoint name='Avg Trip Distance'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Avg Trip Duration by Age/Gender'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Male vs Female'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Utilization By BikeID'>
          <zoom type='fit-width' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{672A7CB9-6789-4E6F-9572-AA535D8634FD}' />
    </window>
    <window class='dashboard' maximized='true' name='Story 1'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{F7FDE783-F574-43DB-9BBA-496D1BC75722}' />
    </window>
    <window class='dashboard' name='Story 2'>
      <viewpoints />
      <active id='5' />
      <simple-id uuid='{D1847B8C-BF71-400B-A5C1-DAB5C5CA07E2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='37' name='Avg Trip Distance' width='84'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Avg Trip Duration by Age/Gender' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      gg==
    </thumbnail>
    <thumbnail height='192' name='Dashboard 2' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Due for Repair' width='144'>
      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
    </thumbnail>
    <thumbnail height='192' name='Male vs Female' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAZO0lEQVR4nO3d55MbeX7f8XcnZGAwmJw4zHFJbuD5dpe3e5JLpbo6S5bK9mP/Lffc/4Cf
      WA9sl8ply/IDWVLdnbXh9u6Wyw3kMizJGZLDyQE5Ax39oIGZ2V1ymDCB7O+rCDamAXT3YH6f
      /gXgByie53kIEVDqfh+AEPtJAiACbV8D4Louruvu5yGIgNv3GkC6IGI/7XsAhNhPEgARaD0N
      QK2U5eH8EpbjUsmvsbiaw3VsVhbnaZgO7WYd25Umjzg49J5tyalz+84Cw/0Gs4s2paV1EoaD
      6YxSzVXIVT3iIZvpo8d6tkshXlbvAqBGiCp1Hi47nDyh406c5lw6x9e5EK1ClkhGw260uD27
      yIWTU9i2jed5eJ6H4zg9OwwhnkfvAmBWqBtDvPdmjO9WyzitNdbMBoPDZzh06Kc8XC5Qa2i4
      zQKKcgjDMHBdF8/z0DStZ4chxPPoXQBCaY4MrHFtNseFNy9QW51ltZHiYjpMo9JicmqSwuIs
      NX38pXflOs5meLoXAK/zmoLrueD5Q6yO6+C5Hq7r4Lkutm0D4Ng2rufiOi6u4+B5Lo7j+I+x
      bULhMPFEklgiSSgcRtN1CeprSNnP9wK9SA3gui4zt26Qz26A53W24W+n+6Ka2ynInuehqiqK
      oqCoKoqioun+vjRNQ1HUzdtVVUXVtM51DcsyqVermO0WkWiUUDhCNB4nkUwRT6aIxeNEY3F0
      w9iV50bsjVcuAJ7nUatUaNSrm4VV0zQUVUXX/QpN03W/sGsqoHT+Kf4GFGXborO2e71zW3c/
      ruNg2xb1apV6tUK9VqNaLtFqNv2weR7haIRoPEFfup9oPE4y1YcRCqNpGpreuwpW7I5XLgAH
      ges6NOt1Ws0m9VqVRr1OrVKm1WzQbrXQdZ1wJEo8kSCWSJJM9RGJxTZrEnFwSAB6xHNdbMfB
      sS0atRqNeo1apUKtWqFRq+K6Loqiohs6uhFCVRRUTdtsdmlqtxbrNM20rZpN0zQUFL9mU/1m
      m9Z93Lb7oCjourF5G4qC0q39FL+G217LCQnAnvA8j1azSbNeo91qYbbbnU63i+vYm51113H8
      Trnndq47uJ6H57p4eHiO6//s+Z16PDr9Hm/zuez2fzRdR9f1ztLoXDc6ATQwjBC6Yfi3GQaG
      YaDp+mbwNFVD7XT8VfX1fcOABOCA++Eol4eH522NeH1/JMwPi+t52Ja1ebEsC9syMc02ju33
      a2zT9NfbFpZpYts26uZggdIZHFA3a5duSHQj1Fn64TFC/jrd0NF1/7ZQOIyyLTTKVkfrwNVA
      EgAB+EGybRvHsrBsy19afjgcx8G2zE6YTGzL7iytzSFpx7FxO8PNjm2jKIofmlAITdM3A9Qd
      INANg1AojGb4NVQoHN4cmVPUrQAC/gidqoKibDYde0UCIF5Yd+jZdf2m3PYAuK6LbVmY7TaO
      Y2+Gx2yb/uiaZXVqJHuzFgL8Ps62YWu/K9MNAKidWqkbiu3NNlXt9It0HX2zb6Sj6hratkBt
      JwEQe+qxxc3z8ADHcXAdG8d2cBwHx7Gh81aZ7ltnXMf2r7tb/SbHtv3Hulv9pm4IXcfefIGT
      x+xaAiACoVvWfkheqRGB8KSRrNd3fEuIZyABEIEmARCBJgEQgdbDKZEmS8srmLZL3+AoIadG
      xdQYG0qzsbpCamgczW2jhaLo6sF6NVAEVw9Hgfw3YlWKy7QVjeLSKjHDoW2PU1orsVFxiRuW
      zAkWB0rvAqAZjIyNU8xnOTKo4nCmMydYp1XKElF17EaL7+4vcv6EzAkWB0NPXwdwams4sTEi
      0RD1/Brrm3OC0zxcylNrajgNmRMsDo7efi5QQ+XE0WHQ00xlbJatJFPpMI2WzeTUJENRiPWP
      9XKXQrwUeSuECDQZBhWBJgEQgSYBEIEmARCBJgEQgSYBEIEmARCBJgEQgSYBEIEmARCBJgEQ
      gSYBEIEmARCBJgEQgSYBEIHW0xlhj+5eY369wdm332L51hfkWmEuXTrFzS++YvTMvyLmlBkc
      nyasy6R4cTD08FMhaqzkHU6dPkGfWmQ5fY6f9Re5vZInNThGZWMZNxEj0WoTioe/96V2MidY
      7JfeBcDzP823lF1iZc1CixxDVRUiiVH6Y3kqtTblUpZ8ucp771zY+tKH/ZuQJkQPA6CnGO3X
      WM6WmTjxBuW563y6FObdD47hlSuo8UFa1SxtJb753VYyJVLsN5kTLAJNRoFEoEkARKBJAESg
      SQBEoEkARKBJAESgSQBEoEkARKBJAESgSQBEoEkARKBJAESgSQBEoEkARKBJAESgPXVCTPdr
      TBvVMpFUhpD25Pm8t776jHwdTpx/k+zsN+SaIS69c4qbV79i9PRPiLkVBsYOyZxgcWA8NQCu
      vcE//s/fkWuuMHDoz/jrPz/3pHvSsjXOvnGG/miVjdRp3j9U5LuVHKnBMcoby7jJOEnTJKSF
      Nr8jePvcYCH22lMDoKhJWo0cF965RN1N7HjfibER1uZnWI+FULRDaJpKODFKOpKlVrcoFdfJ
      Fsu8f+miBEAcCM8QgCh/8os/J1f3OH9s6sl3dEyy2Sz5coPD48fJzVzj04UQ737ozwnWk0O0
      ZrO0VJkTLA6Op84Jdqws/+1vfsPFN5IsOmf5tx8e79nOJQBivz19FEhRqeQXuX1/kW8++TUP
      Nyp7cFhC7I2n1AAtZu7OsTa/QBOYPvMOpw8N9mznUgOI/faUPoDB6FiaUr7F4akBkv3xvTkq
      IfbIU5pAGolEkrs3Pmd5PUejZe3NUQmxR3asAVq1Cram8t6HP8cENE1eOBavlx0DsHbvBrOt
      GMfH+9GBkC5tdfF62TEAHg65tTWiXsNfEU6TSUX34riE2BM7jgLVi3nsUIK+eHhXdi6jQGK/
      7RgA22xRKlfp3iGa6CMRDfVs5xIAsd92bAI1y+tc+f03dMd+jl+8zPmjw3twWELsjR2HdZJD
      0/ybv/olUatCrVyiacuXWYjXy1PHNR2nwPyDCtPHJ8ktFvfimITYM08NgKZl+JO//JBaNsf4
      9MBeHJMQe+YpAbC5f/tzfvfH+4xNZHj0YH1vjkqIPfKUAHhAgmS4wtVbWX72wZk9OSgh9spT
      AmBw9MxRHCfKT89m+PzLBzve2/Mc/vDRP5OtWdy4+js++vQK5WqBP3z0Wx6slFhdnKctHWlx
      gDx9RpgSQnGrLCw0SZ1+a4d7eqw/uEMoPYjZWMVJnOS9yRJ3OnOCS+tLuMkESUvmBIuDY8cX
      wvKLc7RjQwwndepth1QihqI8/hMd7EaeX398lZhukhqfQg9Pczad5545Sspap9F0KNeKWEqU
      y5cu4rru5gthqipvshP7Y8caoLIxxz99+QlDGX8ewKm3P+Ti8dHH3lcN9/HBz95nY2kWbeg4
      2Ttf8PF8mHc/PAqVKEYqSbOyQVtNbM4JVhRFXgkW+2rHGmDxxpcU45OcmswAoOkGeg/fEi1v
      hRD77SnvBWrjqhq6qu5KM0UCIPbbjk2g7MPbfJcvUFrV+em7x0mkB0knInt1bELsuh1P60NH
      TpLymiwvP+TmzZus5qt7dVxC7IkdA6CHE1x6/xecOxxhbW0NPRLbq+MSYk88tWHvOnmK5hj/
      8d+/x7UvZ/fimITYM08NgKoPMd5f4X/8wzUuf3B2L45JiD3z1I9G3E0yCiT22441gOf5BXTh
      zlf8/f/+O+6v1vbquITYEzsOg9byi3w7k8UqLJLqD/NofoPjYzt/RLoQr5Ida4BE/ziZsIUb
      TWLEpvjg0uE9Oiwh9saOAcjOXufmcpmlxQInp5IsrBX26riE2BM7doIds87tm7eJDh/m+NQw
      vf5mL+kEi/0mo0Ai0OSN+CLQJAAi0J46JfKZeRbfffMN69U2J8+/ReHhdbLNEJfePsnNL79m
      9PQlYk6FzOiUfE+wODB61wfwPFrNOmuLc9hhjWqjn1PpEndrGiHTpm25pFJJJibGiIaN780J
      limRYr/0rgZQFKxGhUrTJhlW0PQQhq4Rio2Q0NbQVJVCbpn1fJHLP7m4ORl+H/vgQvQwAGaD
      ew/mqNVbhDLnaK58w8fzIX764VGUSpyakqRZWaelqDInWBwYMgwqAk0a3yLQJAAi0CQAItAk
      ACLQJAAi0Ho3DCrEQdP90GXP27r8gARA7D/XBccB0/KXjru1zvU66xywHfBcf2l31nkutNr+
      dizbf5ztdK47fqF3XP/i/fhTyCUA4sV0z6iu9/0zrG37BdA0oW2CZUHbAsv0C6rt+Otbrc71
      tl/wu9tUlMeeqfEAVQFN8y96Z6mqEDL8paH768Ih0A0wNEABXe/c/8ctfgmA8M+Otr1VeG3b
      P7tatl+QTatz6RRq0/ILtmX/eOk4fkHTOoVO37YMhzpLA/qS/vpw2F+vaX4BNgz/8WqnwKrq
      VmF/wkfzvwwJwEH0wzPg9p+9zf+2/dy50m06dAvr9oL7pIJsWuDY/pncdbed1V1/2yHDv+g6
      RMIQCvkFOBH314dDnfuEtn5W1W0XxS/M3esHjARgt3mef2ZstaDRhHrDL3y2s9Vk8Dz/Z7dz
      Jna3tVkd9/tt324h796nW3gdxz9DKkrnDLytmaB1zsDdgqprkOn3C3Io5J91Q8bWGbhbmA19
      V866B4kEoNeaLShXoFiBUhlKFajV/bau40I0snWW7BZSReks1W3NAG2rzdu9bbNAb2si6Lp/
      P13/cQC6++j+LH5E3gz3vDzPb++22lBv+gW8WPILfaEMtuWfQSMRv52bTMBgP6RTkEj4hXgn
      r/kZ96B5NQNQLEG5tm1UoNtZ6lRoerfNqYGubp1Zn5fn+Wf0UhnK1U5hL0Oz6TdnPA/6Un5B
      TyUhk/bbxrHoVsdOHGivXhPIdeHOfVha2eoQdiPsdq543tZ6b/s6toJgGI9vYiiKf1urBYWS
      v01d8zuAfSkYG4b+Pkj3QTza6eApcuZ+RfW0BqjkVni0VuH4yRO08ktkWzrHDw3z6P59hqZP
      oDsNjEgSQ/MLywvXAK7XeZEDf9kdwXAc//btHcjuyEb3NsveWnYf87gOaSQM/Wm/kCfi/hld
      Cvlrp4cBsFiYWyWqt1g3VaobNQajJm4mg121sL0QiajK4aOH0ZSXDIAQPdLTGsBuVrj3cJnJ
      EYPF6hDn0jm+yUexlu8RSg/htmso8SHePnsU27Y3J8U/6buHhdhtPf1YlDv35jh0/ASxkEnt
      wQLztTbDhyYZn3iLR2tVKlXwrBqKomAYhtQAYt/17u3QnoeuONy9fZOVIhyfiNGIjjCRCtFy
      VKamxpnMRMmMTPVsl0K8rFdzGFSIHpEJMSLQJAAi0CQAItAkACLQJAAi0CQAItAkACLQJAAi
      0CQAItAkACLQJAAi0CQAItAkACLQJAAi0HoagHa9xMpGAYDi+gKz8ys4js3c7D2qLZtmvYrl
      yLdCioOjh58K4bCRLVGoNxgfNLj7IEcmYvFAaWK2bSoPFkhE4PDRRO92KcRL6mEANKamD1Gb
      mYFmieTYMU525gSbuXlC6WGKjTrlNrx15sj35gQ73U9sEGKP9TAAHrZt+xcjSW1jkcVGm6GJ
      SSYm3mZurUKtpuCaVZkTLA6MHvYBbO7fvkm1XOHRhs2x8TAVY4jJvhAtW+XQ1ATjfSHSw5O9
      26UQL0nmBItAk2FQEWgSABFoEgARaBIAEWgSABFoEgARaBIAEWgSABFoEgARaBIAEWgSABFo
      uxQAj0d3rnHl69u0WnW+vvIHVosNCrl12rZMiBEHx+4EwCqQbfVxIu0ws7xMamCM1fl5SjWb
      kC7fByYOjl0KQINIKkN/OoanDdAoZzF0j/WV+3x29cau7FKIF7E7X5QdHaK69AVXlhROXJom
      3jdNtqliNso4irsruxTiRezafIB2o0rL0Ugloji2jarpmK0ajhImHg0BMh9A7L99mRDjed5m
      4fc8D1WVwSixP3anCfQMFEV54S/Itm0bXd+9Q9/N7b/Kx949ce1mje04zq5s33X9pvcPT7b7
      EoCXKfzdx+9mrbGb23+Vj323a2zP83b9+H+47X2dE/yiuk/Uq7j9V/3YgVdy+0/a9isZACF6
      5UD2Pp1WhZrZ++02S+t89dVXzDxao5t6x7KoNRo93U+tsMp60d/m6sL9p/4ulUrlBfdkMz+/
      tPNdnDaFcv2Ftp5fW6RUN8G1efToUc8/1tJzbKq1Fzu2Z9q+XafasLetcSgWyt+7z4EMgF1e
      Zr3mUquUqdQauLZFtVqhWm/iWCa2C6ZpYpstisUipu1iWSb1WpWWaeF5LqZl/2i71dUco2fO
      cGhsAKvVoFSuYjUaLC4vdvZj0241aDRbWI6DbZk4jk2pWKTeNHFsi0a9TqPZxvX8Y3icjWKR
      uZlZPKfGd19fZaPmUi2XqNabuLZFs9mkZdrUKiVqjTaLjx5SKpWx3ecrYGYpx/zsPdaaLpbZ
      plwq0jRtbMukUa9TXJ2jWK/xcCH3Qn+H3OIiD1dWadWLXPv2Bk3TolIqUmu2sUwTz/Oe+Bw8
      C9c2Wc1m/W24DqZl02rWKRVL2K5Hu1GjXK3zom0Ut5VjJd/GNG1cx8a2W8w9XMLslBHLstB+
      9atf/eqFf4Nd4tRzVNQUs1c/4qtbswxEPK4v5NhYWcZoZ6mFx3lw9zoRt8ZvP/qMihejuHCL
      Ykslt75GPKKwnGsykP7+55DWNha4fn8eT43w3R9/zTff3iI8NE1pY5782gqtpsftuVl0s03B
      UmiszWDrMT77l98ws1wk45W5vlBAt0rUibA8v8jI8OCPjr9YKmPYbZqmjap7hFND3Pr8//Ht
      vQVGYi5X7q8StWvcW1xD0yLklmYp5wvY8QH6Y+Fnfp7WVhYYmZ5kZbFMo7BANl9kfiVHK7fE
      fKGO3ihDOkO1bDI+kn7uv0OlUsG02tCq09ajDGUSfP7b33DtUY6M0cYLR5mbW2FkOPPc2wbw
      HItitc7iwhzjKZ1rC2WWZq5RL61TsON8+8ff8u1398hMniQVff6RIc8sU6jaLK7kiGk11gs2
      rUaDajlHOASLG62DVwO0mw1WVkto7SKhkaMcGU3QasOJcxeZHO4DRaFeLVKuNikU67x16W2c
      Vo1I3wgXz53k1GSCq9ceMDQ69KNtK2qcd3/+c84eGYJIhp/9/AMyYZ3M8ATDqSiWq3LijQuM
      9MdoNesUCmXKq2scuvgT+sIuaBHeePNNDh85yuLNL0gMjT7x9xgeG+DegxUG++I0SiXS0yeZ
      zOi0LZXT598irUNm/BDDmSQDY9NcOHX0uZ4nz3NYmHvE7Vv3WVldwNHCTE9PE1Y9tHCSi2+e
      I6K/7J9XIxPVuV+0GU7omKU10iffpi+sMDY+ws0rVxiYPvJCW7Ytk3IhS9tS8RybfLGAaTn0
      j0zx5oWTeM02kcw4l99/j9SznxM2me0mG8vrqNEQjtmikMtjd36nqaEEV6/fZ2xyeP9eB3iS
      Sn4VM32YU2NDOOUcHDrNSH8KJaLgjU4Q0hXuzcxx7MRJBqMuD5dLnD15hIiuogBNRyOZTpMO
      //iPn5qYwB8DMHjzwmkerVc4fmKMamkRu2+aE4NJbMMgEo8Qzt5FHz/JxNgAs3fvc+L0Wfr7
      YqiGgt1qQTjF6EDqsb/D8PAIkXCY8+djZGIqfXqc5fsFBo6dZ6A/iRdViB8+SeHubTZQGJ+Y
      QA/rDGE8+xPlKZy5dJl0X4paqcjC4jwPHi5w5NRpIp5FSFFITx6FWJzwociL/CkYnhgnGtUI
      9bnEDZtQJEJfaYbhc2cxLQclOch44sXG7J1WlaV8g1NnTtPMwVKuzvHJISKaAyGd6WmDkaTJ
      SqnByPjzF9NGOUdeGeHcWIaVVpay3c/UYD92Mo5p5kmmh0gZyus3ClSvlNBjKcIvffZ7Mrvd
      oGGrpOIvVrB2g2maGIaxq0Os27UbVWw1QjzyHKE9ILaXkdcuAEI8jwPXBxBiL0kARKBJAESg
      HbhRIBEkLtc++b8o05c5P+zxd/98hb/+D3/B40Y9rVYdV49SfPgN7tglxpNbt/3X//yfOHH5
      rzCKj1iqavzpv77M7NVPyHoD/NnlC8xc+z3u6Du8MRnj6qf/Qp4ME5EKf7xXlwCI/eSxsjxH
      oTTIwKkI9+7ep223mbn+DaHhYwzpJosbq4T6xln8/d8yn3qfi+odFpdUzh4Z5/ThURQFUuMn
      eO/0BEu5QZTrv+Hrr79gvZrmlHaHa0vHSJtFbqzWGK1+xZw7xb/74CS66rCY/UyaQGKfhfoJ
      uUVW82VGRzLM3fgjq1aSO5/+A7/7+A80Igm+/PRz0sNDTB8+QkhXSQ9l+PzTj7+/HT1Gbek6
      M60Bzg1qGP1DjI2kKdQ9xoYHAMiu5iksfcd/+Zu/Jd+0AOkDiAPg9AB8vaHRH1EJRyIU15eo
      OwaGqjM4PERE0+gfHGJlcR7b9RgYHiP0g9ffnNJD/vs/XePIeAo7NUl95nM+ubbO8SGPb2/N
      8mjmNqnp4ySjcdIRHdPxJ8jI6wBiH3nUa1XCIYNaG3TPJpqIUtjYQIuliakuajRKu94kFjNY
      z5boS0TQoynMRo1EMomiwN//n//FL3/xS/L5Aq4HmaExnEaRFmEyCZ319TyuojI4PEK7ksNU
      o/RH4R9/fUUCIF59N658hJU+zjunDz3zY2a+/Zycm5EAiGD7/9Y6aajiU9M2AAAAAElFTkSu
      QmCC
    </thumbnail>
    <thumbnail height='192' name='Ridership Growth' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Stations Map - Bottom  10 (End) (2)' width='192'>
      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
      C6mT5MTuAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Stations Map - Top 10' width='192'>
      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
      lehnCcK+XAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Stations Map - Top 10 (End)' width='192'>
      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
      bGe61R4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Story 1' width='192'>
      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
      esSlax7R/we+c03F+hOyJwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Story 2' width='192'>
      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
      K/cAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Utilization By BikeID' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nOy9aXBc55nv9zu9N7rRjW7sKwGCADeAG7iA+yJRlERJlix7xjN2xo4nU1kq
      lVSlkg+pfJl8SaUqqeSmUkmm7p1rz53R2DOSrdXaKJEUdxJcQOz73ugGet+7T58tH5qCRkNC
      kn1toC307xMJHqCe57BfnPe8z/N//oKmaRpFimxABEEQdOsdRJEi60lxARTZ0BQXQJENTXEB
      FNnQGNY7gN+FVCxIhhIqnCVfeZ0qiyx6fciKRomzgmp36arXalKGWc8SphIHtVVudILw+w77
      D4Yqppjz+kFvprG+FoN+9djTiSiGkjIEMY5nOQRAeU0DDqtxTWKVxRQerx8NKKuoxVVqWfVa
      VcqQyAk4bRYSYT/BWBp3VQ1O2+rf89vyx/cE0BSuvfOPvPbuddSvO79SZaLhcX752sck0uLK
      l/sH+njs8Mvfz2sXerl/6W2uj3iZGBokI33xz7c/vEDs95fF7xVVybGwPMb4cgz1X+Q1du8i
      s6Hcl669f+lNFhOgSFkGb17gcs8oWUkFHn1tdOwPHutc32e8d+0hafFf3OD4Ah/eGvnStdml
      ET7omQDg4m/eZmpxgX/+p9cJxoMMj8z9iwuX+fjSw98pnj+6J4AsJgia6ilLzhNcGuf2YIRN
      gpdMxSaG7vUjZ0Re/qv/nGoL6Ew2Ovd00PsAtjQI/H//6/9F+4kzBBaHqdAlePvmNDpV489+
      +mMcQEPrDl44aODfvdNP2pJFE/18fN9Dd9duLl7+lAWzg51OkSs3+2jtPoe372McJjOGtuOo
      k9fJlrawq0HPlXujOBt28+cvHF2Te2IocbG7axcpuY7xm7/h7myI0potJB9eINYg84PD9bz3
      6RUM7g5aH/2PW5xVdGxtxWPchi48yP/7dw84cOo4noUZgg9u47WZUZUqqoRFfAkrZ19+njrH
      Vz9xvwmmEhedO9qIhytx6cL8/c9+hYyOjs1lXLg0QZPbzFTfDWaWkrzy3KEvvlFvY++hI5SG
      FpnweQhMpJl5+ClRQzkdjVYufPyAmjo7i4M9jHujvHj2IL+5MYYul+DcqYNcutHPzn0HiE/c
      YSaQ5uR3/hz4I3wCxOZ6GZ30EZofZzxdRi40zQOfhCXmZceJ59hUZkR54pNBxeTaxFNHOhGz
      GVRZpX3vMXaU5/CnHl2iQWBhAUd1JWI2i7Gslio7+OIae7bt4PiJQ4yNjlLptuLx+VFNTp57
      +gjxmJeEWsmrL5xmfqAPc0UTdVWONbwrXzA8H+bVP3mZpHeenXt2c+rEMfxTw5jLKvHNe3jS
      rVEVicbt3ezeXElWFMllBU6cfxFdykdFdT1IMUJR8Qnf+R9HxOuhbudR9jVb0Urr2bH3ME0O
      EX9Sg5SXaPrL12uKxFI8g6tETzYrU1PfgJyMYK1pYmfnAdrLdXjiIvpckFAsTXXbXna1VjD5
      sJfOs9/jcEc5D/sXad2yGatBD4D+r//6r//6957ZH5Cgd5kDz77MUwfb8EVgszuHsXInO1qr
      eHDrOlNzIZqbXcSyJlylZkAlk9HR0FhOLqejobGKbCaDw5jjwpW7uFr30bW1Dp0qcffOHaJq
      Kc+c2g+yRGmpmUVfkJrmNrbUm3kw5KW+3EpWsNPU3EyFo4TG2hokvYv6kgS3BhY4cGQfy3ML
      lFbWs6m2Ys3ui4aCXrCwyaXnk0t32Lb/GC21ZdzpHWHLpmr8CYnmxiaa6tw4qxopMYIi5TDY
      XLhsRnRmB5VuGzlZJeubonfOx/Zdh7HKEcIZaNu6FWeJ6fcSqypLqCYHLc31zA32EKKSwwd3
      EZ18iGyrIpeMUtXQRHPLZkwWG/UVDrJxL3fuDVC34yA7msqRFR2ClCCpGGjbuQdpeYi0yY2a
      ilFev4nmTZuwlDipLDWyaec+pnsuEVbdbG+yshzNsal1C//mf/tf/mfh21IJTkd9XLp0g+rt
      h9i/rZGve4dNBr1EVDuN6/SbupCZHx6lfMc2bOsdyB8YQRCELy2AZDKJJElf9T1FinxrcLvd
      X14Asiw/fjpSpMi3FJPJJHxrtkBFivy2CIIgrHIMKnHz4w+ZDYRp6jxNWXyA+540+w+fIT72
      GSPeFIfPvoQ4dZ1+T5qDx07iG7qJNxCl7fCLHGyvXNtMCoj4wDiR232UtDZSeaZ7vcN5ImIg
      TODCDdzHuyhpqkNTVPwfXSPr9ePcu53U1AJKOkPVc8cJX7uPFE9S/dwJLHVV6x36CrlQlOX3
      P6Pi9CEEvR7/x9cR9Drqvv8seqsFTdOY/3dvUPH0YZLDU2QWl6l54RTRe4Nkl4K4j+0DVjsG
      1Qwcevo8x/e14p0f40qvj1NHD9NcqzG+qOMvXjrCrZ773Oif5sTxIzTVVHDi3Isc66hjzhNc
      y/tQcGQXl3Ed3kPWs4SmqusdzhMxVbhwH92HJsn5L+gEyk/sp7SjDSmaQGc24uhsJ94/jqZq
      lO3vID4wvr5B/yuMbiflJw6g5mTMNRU0/PBFrE11aIqCpmnE+8Yw11UiRWLobVbqvn+O1IyH
      8tOHKN25BS2Xz/3JC0CAsZ5L3J7O8fxTe9BkFc9EH29+cgsNPTqdDlQZRcrhm3rAmx/epf/G
      x9xftvPSqW1reR8KDvexLuR4EjmR+vqL1wlBEPiXx2SCIKBksiiZLEanHUdHG+JyEEGvo+xg
      J+JSEE1R1jHix8nnkP+zmpMI33hA6Y5WDHYbSjpD8OItsp5lkmOzIAgIgg40DTUjomZzK++6
      T14AYpQPLt4klwwxMJ1g77Zypn0hKio201AW4+e/vkTnrj3s29rI5EIIl9PIhcs3ySa8DE14
      1+gWFCZiIExicAJbWzOCrjDrjBnPEktvf8ry+1dIzy6SHJ8ldPUe6ekF5HSWxNgMmXkfjo52
      UmMzpKbmce7Zvt5hf4msL8DSWxdZfv8zQlfuEu8bJfDpLTKeJcSlIA1/8R0cu7Zi39pCLhBm
      8Z/ex1JbSfCzO6SnF1Cz+cJe8SV4gxMfHMe2uRF9iXW9Q/m9EB+aoKS5HoPt69s2HqsDFCmy
      kXjsFEgURZQC2+sVKfKHpDA3qUWKrBGr1AE04oFF+maCHN/XztWLlwkk0tRu3c/OSrjWM8jO
      7pOUqUFGPSKH9m9l5PZnjHljbNt3jB3NG7cOIMcSBC/cwLZtM6Wd7esdzhNRJZn4vUFsW1sw
      up0AaJpG7HYflk11xG4+REmlcezbicHtQPQFcO7vWOeov4wqycTvDmDb3oq+xELok5voS224
      jneBIBC/O0hmeoGyY13E7vSjJFOU7t2OvbOd2K0+bNs3A6s+ATTiSYmJsT4wlHDi3PPsbLCj
      oOPd9y5w7Ow5ap0WEvEIk2MzqIrI6ESIZ77zyob+8APEe0dwHesiPTH39RevE0oqjc5kRIrG
      V74m+gKkRmdQUhmqXz2L89Au9DYrSiqDms6uY7RPRs1kEYxG5GgcOZmm7Mhe0DTkeBI0KGlr
      wnViP6nR6Xw+h/egt1kRvX4SA+P561h1AehoaGnB8khap2kKD0d97N5mJ+xPcvHtf+bm0AJN
      zS2Y9AJoAja7ym9++XfcGV9eq3tQkJjrqgh+eHW9w/hKjGUOjJXulb9rskJ6bAbHvh35vwOZ
      OS+WTbWUtDaCrvDkoQaHHXN1OQAmt5PsvA+juwyDw46gE5DjKUIXbmBprAEgM+PB0lRHamQa
      R9eOL37OE3+6phD0+4nF4gQiCYSlu+ibj1JqdNLcWsPWjlb6F4IEKrPEYhEC0TRtHbtRUl76
      p5c41F79h78DBUp23ofz4C4S/WNoioKg1693SI+hpLOIi8toqoq5phIllSHnDxO/N4S1pQFB
      r8O6qQ5BryfrWSK3HCIXimIqL1vv0FdQMiLZxWVQNZRUBikcw7qlCTUnoeUklHQGx8FdZKY9
      6MwmLE21aJJELhAmdncA+44twL+qA6ycAqkSkyPDRNI5SqsaqTFL6N0NlJoEMvEAI1M+tmzb
      hm+ij7gIrupGLFKE5YTCzo6dWAyF9xtjrVCyIomHo1jqq1d++xQaUjhGcngKQScAAuaGaqxN
      tcjJNIJOQElnMbqdCDod8YcjKIk05rqq/NOgQJCiCZKDEwg6AXN9NdkFH4LegKDXYapyo+Yk
      pFAU+6521EwOo8uBoM9veORECsFgwFHxr9qhi8egGw81J6EzGvhaBdEfCWpOQjAa8q0SX4PN
      ZvvyAlAeNRIVKbIRMBqNxUpwkY3LVwzH1cgmYywu+shKCtlkFM+iD1FSSEQCLCwsEElmQVMJ
      +5fJyiqSmMK7uEhalNc2iwJAU1XEYCTfiquoZDzLyKnMeoe1KpqmkQtHUXNfyF8VMUcunJ98
      lIvEyHr9aKqKkhXJRQpvIpKmaeRC+Rw0VSXr9SMGwis7GCWdJeNZQlMUcpH4Sj5qLkd6zouS
      yTfDrXIKJDH44AGxTJSYUEO9OUUiEeWevZXk2FUadx1kk7EUY9rLv/3f/4Zz/83/yPzVtymp
      a2ObqZSSyo0lNE/PeYncfkjVueNkFnykJubQZJn6H5xf79CeSC4YIXTlLs4927Bt2fSof36U
      zJyXqudPEPzkJjqLGfu2FsRAhJw/RO0rZ9c77C8hhWMEPr1F2f6d6K0W4v1j5MIxqs+fxFBq
      w//xNdDA6HKQC0bQmU3Y2ptJjkyjt1nRW83AqnUAI3uPHMUip3G6qzlw9AQGNUtZmYtoLEBg
      OYLZYuTB3Yfs6dqDnE4wuegjEQ6i6f7oZm39R2NraaB0eysAUihKzUtnMDhLC66H/nPMlW7K
      DnSuvPgKgoDr4C5MFS4EnQ4pniLrC5CanMfdvRuju3COPz/HVF6Gq3sXIGCuraTsQCfmSjd6
      qwVVlDC6nFSdP4mcTCHFk2SXAiRHZ8g8OtbVlLxYaZUngMwnv/4FZbuf5qltNXzw2t9RcegF
      DrZV0NX6PyEv9/HGx5+SnpuCdBi3vYGKulaePrmdNz68xl/+6Nwa3ooCQ6dDisZRMyIUqB7g
      q9BZzDT++Dukpz1IscR6h/ONyIWiJIcnqXiqG0GnQ81JKMk0SjKF3mqh8S++Q3rWSy4QBlWh
      4sxhgp/dAVZbAHKWpAyx/pto2a0kZT3J3quoub3o/dPMBJKcOfEUW2q/w8LAPbTGDuT5Xi5c
      6uf4mY334Y8PTRC+8QDjyBSVTx/B/9E1HB1t3+gobj3IeJYIfHwd9DqkWBK9xURm3kdyfBbB
      aEBJZZATKarPn1wRzejNJlzdu9c79BWyvgCBj2+ATkfpjlaSYzNkPMv5+24wYGmsYfmDq1Q9
      e5zgZz3I0QTV50+RnnOw9O5Fyo/vB4qCmA1P1uvHXFNRsOq135bfJp/HBDHFOkCRjYTRaPyy
      IEaW5WIluMiG4tvx3CtS5Hdk1cFYdy9dZCYQZlPHEbSlQeb9cTbvO0hyYhhvYBHr5uO8dKie
      v/+bn9H9pz9lue8zlpeWMLae5rvHN+5olNT4LLHbfRgcdqpefmq9w3kioi9A+OJtBIOeqlee
      Rmc2Efz4OrmlII4DnaTGZlBTGcrPHSXRP05mxkPl8ycwF9BgrH+JuBQgdOEmOquFqpdOIxgN
      hC/eJrvop3T3VrJzXpRkmvKzR4jdG0QKxSg7sgdYdTCWnj3Hn+bY3hY8C8t0nXiW7s4mPN44
      p86/QF25mx1bNzHe/wC7oxwJM6eefRm3xcze3W1rmXvBUbK5cUWVVKiYqsqp/v45zHVVaI/m
      waqihOv0IczV5eiMRuyd7SSHp9BkhZo/eZb01MJ6h70qUiiGbftmjC4HqiSDIOA8vIfSXe1I
      4RiCQY9919b8whYl3E91Y2muA1Z7AggCM33XGVhWOXf2FDO9l+kPGXjuzG5yqQCLKQuHy2T+
      5j/0Um4XWFj0sa3EiEeo46yj8Prf1xJN0xB9AXQmI5qqFuTpiibLxO70Y9vWgt5WgqZplLQ2
      khqeRG+1UNK+ifT4HDqzEcGgR9DrC3bKHYBgMiJ5lvOzfjQNQRBQ01nkaAKjy4GhqZbUxCw6
      s5mStiYSfaMYHHZg1cFYMT745AZyJsrwaD/vfngTMmGGpxeZHeihYVc3JpOdP/vxj2iuq6HC
      5WToQS+d+7vWMu+CJNk/Rnpynpw/tN6hrEqib4zEwDjhz+4i+gJkZhbJznsRvQF0VjOZ6QVE
      nx/7rnaURArva+9iLVBtAwCqiri4jBSOIceTpCfnid56SGbeh5xIkZ5eQFz0Y9++mezsIqIv
      gP6R0V5RD7DBSQ5OYN3ciL7k9+e8uJ4khyaxNteh/waDsR7TAxQXQJGNxGMLoFgEK7KR0Ol0
      Xy6EFWrvSpEifyhWFcQsTjzkrbd/gzeSQdNUbl/+GE84hX9mkHc+uEQsIzE3fJdfv/0+gWSW
      wdsXef31NxicDqxtBgVG1utn4R/eIfZw5OsvXidUMcfSOxcJXrmLpqpomkb41kM8//geuXAU
      TdMIXbuHnEiR9fqJ3h1Y75C/EkXM4XvrE8K3HqKpGpqmkZ714H39Q3LhGIuvf8j8v/8Vsb5R
      Yg9H8L31CUomP+tolTqAjIiTk/sb+fTibeLzD7nbN8FMIMj7n97ncJuND28MIJvKeGqng3c/
      62VoxM/zr36fjs0bezCWvsRC7avPkBicWO9QVkWKJR4ZZEiPBklp2NubKT95gOi9ITKzi8QH
      xpGiCaRoAjmZ/vofuo7E+0Yp3bEFOZZAjiXQZIXYw1FcR/cRezBE/Z88h/tYF4JBT3raQ9mB
      TmIPhoFVDTKMVLv0fHixl8OHO/j05jSnDrYBCfT6KqpqakiHo1TYBd69PsvTB9spKZF5+x/+
      PbfHNvZgLJ3FzNLbFzGWFa4qzlTpJrPgw1ThejRISocUS+D/8CqWuiqS47OUde0EwL61ueB1
      DZb6akJX7yIGwuisZjRZxuR2Yq50rVyTmprH3t6CvsRC4MINsr78TuXJmckpfvHam3QePY1L
      n8VoVrl6/TZjoxF0eOkbGKG8tpJf/OJ1uk6cpNRoYGfXQQ7t3cTMuGdNki5UxKUg7sN78luJ
      Aj1RS47NIEUTmCrdqJKMFE+i5iTcx7qIPxxBXAqy/MFV4gPjiMshcoEwUiT+9T94ncjMeXHu
      24nBbkOKxNEUlVwwSrx/HJ3JSHp2EWtTLTqjgdKONkpaGrBtaQJW0wPIIv39D4mnJSoat7Bt
      Uw2pSADR6MCYDTAyH6Gzo52xB3dJylDd1I4xs4QvprBn7x6sxo37Mi36Q8QHJ7C1NFDS0rDe
      4TyR7HKQxMA4gtGAzmTEXF2Bks6SC0Yo29+BwV6CFI2jM5uJD4whx5JYm2qxb21Z79CfiCrJ
      RO8O5FshsiIGZylGhz3/JDvQiRSJYSp3Ieh1xIcmULM5nHu2oTMYimNRNjpKVkRnNn1rTgB/
      m3weM8iQJAm1gHs+ivwBEIBcbr2j+P3xW+bzpQWgqmqxElxkQ7GqQYaYSRFLZClzu5EzcRJZ
      GZfLjZJNkBQ13C4n2WSURFrE5nChV7Kkchrl7rJCnKa9ZqhiDikURe+wY7B/fT/KeqCpGlIo
      gmAwYCgrzdukprPIsQTGirK8laiYw1juQkmlUTMixoqyguxshUf5BMPozCb0Dns+n6yIHHv0
      op/NoSTTGMud5AL5AWaGUhvwFWNRBu/dI5qOkjLW0+pQWFxaQHXWE5maxe0yUrbtCJ4r71LW
      sZum2lp6b9+kzKbHsf0s3W3la5l/QSF6/aQn5hD9Yep+9OJ6h/NEcksBEn1jyLEEFedPordZ
      id8bXJmarCRTCEYDtvYWEv1j6CwmbO0t2LYV5ktwamyG9NgMqpij4vkT6G1WQhduoskyloYa
      MnNeBAFs21uRowmyi8uYKvJHpKssaQN7jxzDLuSwOyuocJXgW45TU1sDUpJMOkHf8DTBRJBo
      OInDYUcRUyRlkdGHo2uYeuFhrqtCisRXzBsKEVNtJc7u3Ziq3CsvjGXH9mGqLsdSX4UcTyEF
      I6SnF1BSaeRIgtTY9HqHvSoGhw05lkAw6NGZjKg5CaOrlMrzJxF9ASwN1ZQ/cxQpGsd5ZA+W
      +uoVk4xVtkAyl995HduOk5xpryEtKpw/JfHppJ/v/eQ/JTh+m1tBB+ee+e+RA328dX2aH/7o
      p8QmrnHJV7j/8WuBJitUvfwU/rcvoinqykz6QkIKx0iNTOM6dRBBp8v7g90dxNpUi6mmgpKt
      LWTnFpGiCcrPHkH0LiN6C7fFJetZxnXyAKnxOeRECoPDjpLKoqQy6ExG5HgSJZlGZzCgJNP5
      LdAjQcyTF4CUJSaqRIfv0iNtRw3N442k2bv/GIN3LjIbEThxuovhu1dYCGY4fvQEfbcuMR9R
      OXeuMI3h1orMvI/4/SEsdZUFaS0EkFsO5bdpXj/2nVtAgOzsIumxGWw7tuR9t+JJKp49TvT6
      A6RQhPJnj6932KtS0tpE+NOb6B125EgcKRTFXFtJ8KNrlD9zlMz0ApFr9yl/9hhSOIa9s+2L
      sZBFPcDGRlz0Y6r99gzGEr1+TNUV3+jJ+5geQJKk4gIosmGwWq3FSnCRjctXGGQUKbIxWHUw
      Vs/FT5haCtGy5xj65VHGFv1sO3AWZfEuE54I248+izJ7m2FPjCNnX2Dm3icEkyrHz3+PpjLT
      2mZRYETvDZL1Bah58fR6h/JEsr4AgQvXEYxGal99Bp3RQPDSbdKzi5Tt70COp1DSGaqePU7k
      dh/xoQmqzh3D2lCYkyGS4zOEb/QiRRM0/eQVDA4b/o+vIy6HqDjTTbxvFNEfpuL0QZKjM2S9
      fspP5KdDrzoYa/expzl5oJXZaR8dB46wY1MlwWiUzoMn2N7owh/2M+LN8KOXu7n88WWWEzqO
      7avns0sP1zL3gkNOpMguBQq6ucxU6aLuB+ex1FaiPRokVX58P9XPn0TJirgO7UJnNqGpKqmp
      eaqfO4G5qnCPt+3tLTT88EUcHVswOO2oorTS3h3rHUZTVFwHO5GiCZRMFteRPSveB6sIYgTm
      Bm5wdSjG+We6ycSD+KMZDAY9mViQYDKHHgVB0KM3mTBZyjl9aAczMwuIG7yZzn/hBmomR3Js
      5kseXIWEpqhEbj3Evm0zBnsJgiCQWVgiPefFdaATwWTMX6hqyIkU0XuDBD/rWd+gv4bUxBwl
      mxsRdDp0VjOOznZS47Mo6SyCQU9qOq9T0ZlNX5py9+QtkBjlzfcuUr+9k8HhIVKL04SiMdyV
      CR70zBFKxCirtlJpSvCz1z6k48R3mJ97wMRMhGOv7lqThAuV8uNdSJE4SjZbkEUwgNiDYWK9
      w2S9fipOH0JJZVh69xIGpx1BJ5D1BYj2DGBw2LFuqiPrWaL0kbN6IaKpKpl5L5XnjiPFk0jh
      KOk5L+lZDxWnu4n09KOKOcxVbqRw9JGFUl6xVzwF2uDE+kaxbdmEwWZd71B+L8QHxihpacBg
      t33ttY8ZZBQpspF4TBBTrAQX2WgU5ia1SJE1YlVBzNL0EHeHPRw8cQotOEHPiI/u4wcZvnqV
      cE6icfsBHNl5RhcznHzqFLqEl2t3Bth15AyN5YUpBFkrxKUgUjCCvaMwvRJUSSJ04SZGlwNn
      9x4QIDPjIX53EPfTh5HDMVJjM5Q/cxTR6yfRN0bFuaPoLOb1Dv2JpCbmiN3uQ2cyrugbUiPT
      pMdnqXjuOFIsQeRyD+4zh8guLpPsn1gxyHhyM5wmMT3pocyW4qOeZQ7uaMFlivPpaJo/ffYw
      Q9c/IFq+h+3VVmRvL5eXXeTmB3jhT3+ARQfWAr1Ra4EqyQQ/vAZoVL10Zr3DeSI5fwh0OpL9
      45R27cBQaiMztYCxvIxYzwCqmMO+sxUpkiA776N033ZyyyHKCsgm9V+jqSqRK3cpO7oPTVGI
      XO7Bsb+D5MA4uWCEqleeBkEgfPEWFY86W2022yqtEIKRmnITF6/0ceDgAeorTHxyc5j9u3ei
      ShkG5qJ0bq4lG5rl/ZvjtFSXEon7+ez9N3gw4V/LvAuO9Pgstq3N6MyFWw03VboRfQGMbieG
      UhuCToepupxE3xi27Zsx11ZgqipHzWQxVbiw1FXlzScKmJw/jMFhR2cyojOZ0Fnytk+ZBR9S
      NM7SL98nPT6LmhFZ/Lu3SI3PAqu9AyhpfvX6e+w8fIpqh8IvX3ubrhNnqHKa8U/dx1K/m1KT
      jKwv5+zxTqZmAjTUNbNnXwee6bk1TLvwEJdDRG/0Er3Ri5IpzA9NenIeOZ56ZJGkoKSzRK7d
      x9raiMFhI7uwTGp0BoPDTi4QIjEwvqKhLUQ0TSM5NIm9sx1NUVAlCXtHG7btm7G1N2Opq8Z5
      ZA/iUoCS9mac3bvJepaA1bZAskhfXy+xVI7K+iZyIR+xrETVpq1UmjIYyhpxWGBq8CHLSY3d
      +/ZCcomB8UV27tuPw7yx363zk8kiBSuLFJeCea2v0YC+xIqxogwpGEWKJrC21KO3l5Cd9+Hc
      30EuFCEz5cFxoAOdcZVXxnVG0zRyyyHMNRUk+sfR262o2RxyPInzYCdSJE5yYBzngQ7EpRBZ
      zxLOg504KsqLBhkbHSUjoreYCtrU77dByYjoLN9sMNZjghhFUYqDsYpsGEwmU7ESXGTj8hWC
      GI1cNkUoFEZS1Ed/jiApKpKYJhyJoaga2XSCcDSOqmmARiIaQSruoFBzEnIqs95hrIqmaeTC
      UaR4csUWS5Vk5EQKADmVIReMoCkqSiaLGAijyvJ6hvyVKJks4nIQMRBemcitpB/l8GhHIydS
      j16QZUR/eKVTd5XBWBK9t24SiocQbZupEcKEomHUyu2oC/dRDWZcW/ex2HMTh9NE5b7z7HFG
      +b//j/+Tc//t/0NX7dokXohomkbg4i2kUJSGH7203uE8kc9dX+R4itpXnkZvLyF2f4j0rIfa
      7z7D0lufIBgN2NtbEP1h5EQCS1017iN71zv0J5ILRIgPjJMcm6HpL19FbzGz/MEVBJ2Oks2N
      2Nqamfo3/4HGH79MvHcEDXAdzHctr/IEMHLg5BnKLRoldheHTp/FZYESW464WEUqPHQAACAA
      SURBVMMrzx1nZmwWWUwiKVl67w/Tc3+Yg10da5d1gSIuBfMnK27neoeyKpa6KipOHcJcU4HO
      ZEQQBFzduzFX56dD6Cxm5EQag8NO5dnDWBtqC/ZEC8DaVEv5qQM4927Pz/sRhPxTLBInMTpN
      5GYv5Sf2oykq6XkfSiKFYMgbuq+yABQu/vo1cvVHONfdwqf//HPYfJKnu3agqklS8TiG0gp+
      +F/815zc1YrZnKV3YJyh4XFGxsbWMPXCI3jxFsnhSUJX7634UBUaUjhG7OEwlU8ffqxg9/l4
      8apnjpKZ9xK5+RBrUy221qZ1ivabEXs4imP3VgRBQDAaaPjhi9S8cBpB04g9HCF0uYfEwDjW
      +iqqXzhN+PoDYDU9QC7OL3/xOroSB03tW5m+14PR4aRp5yGc6SkezkQ4evoZlgevMB1SOfv8
      87hLDCz0XUbedJqWsrVOv7BQJYnE4CTOvdvXO5QnEh8YJ3LrIXp7Sf5Do9ORmfOSGJmirKsD
      JZ1BXA5RfnI/wUt3AHDu3Y5z7451jvzJaKpK7OEIZft2kp5bREnn31syc15qXjqD0VlKanoB
      g8OO6AsQuz+E+9g+7G3NxVOgjU5mYQlLXVXBqtd+WzKeJSw1lStbnK/iMUGM+sgys0iRjYDB
      YHjcIaZYCS6ykfh2PPeKFPkdWXU8+oOrl5laCrF59wn2tZXz+t/+LTue/3NSo1eYC4ns7D6D
      wT9A32yUfYePE5q4x8JyhK3dz7Gr2fXkH7tBSDwcRVwKUvHssfUO5YmI/hDhT2+hMxmpfPE0
      gslI9GYv6fFZyp86THJkGtEXoOzIHpID40jhOCVtTbhPHVzv0J/I54IYJZ6i5ocv5A0yPrpG
      LhjBVOkGQI4nKT97lNToFOmJeSqey2sCVimE6dhx4Dj13gGujs1TkRgBdw3xTIbF5SR7d9Qz
      OD1PZHKSF7/7PZylDhoqTtE8dZurU74NvQCUVJqsz49A4TaXGV1Oqr/7DLE7faiSjA5QMyLV
      r54jfn8I18n95JaCyPEUVd89S+LhKOaaivUOe1VsbZuwNtcRuXofgyOvb6h88TTJoUlQVbIL
      Szi6dpIankTJiFS9epZk/zjwFYOxFsfvc2UwxDPHtvDezTFsUgT/sh+rQcfUYgS7RSCbjDPU
      c5F3L/UxO3CL61Pw4qnCPPpbK0KX7oCskJ5eQJUKczAWmkbs7gAl7c0Y7CVoqpYviBn1gEZ2
      zocUjGLv2IImScjhGKYCLoQBZKY8WJvrV8a8a4pK1rOEraMNS3M9yaFJlEw2741sNK60TDx5
      AYgx3nr3ExQpxehsmJdfOY+z1I7FYiKbThGPJ5Cx0LGljuVoGotB5p0PPkWRIoxN+9Ys6ULE
      eaAzLywptVGos4cTvSMkekeIXLv/hRN8NI7vH97FUObA/84lksOTpEanyUx7sLTUF7R/gKaq
      ZOYWsbbUIyfTZBd8pCfnKNnSBJpGdsGHFIhg72xHjifx/v07mOuqgKJBxoYn0T9GSWsT+m/J
      YKzkwDiWlvpvNBjrMT1AcQEU2Ug8tgCKRbAiGwmdTvflQlghj/QuUuQPwaqCmKXpAd5+5wP8
      CZGJhzd444036J3wkgp76ekdRdU0Fsd7efOdj4ikRYbvXeWtdz8mJhafIuJykPjg+HqHsSqa
      qhLp6UeKxle+lhiaxPfWJ6g5CdEfwvOP7yEGwiRGp/G+/hFyMr2OEX81yfEZ5n/+Jp5f/GYl
      zlwkzuIv3yfjWSLS08/8z98kPeMhfOshi798HymeBFY1yJCIi1ZO7G/go49u8NmDEb73ve+x
      Z0stXs8cDweHUdBIqhbO7LTz5qUBqjZ3cqRVz/tXRtYs8UJElWTCN3tJjRfueBgpHMtPrghF
      gbwCLDW9gKt7D6Fr9/BfuEHd985hcNiJ947gOrqX6L3BdY56dWxtzTT++GXMVeXojAY0RSXw
      yQ2qXziFudJNLhCm8SevYG2ux7a5EdfhPcTuDwGr1gFMNFRb+eRyLwe6d1FtEfjlP77G3ZFF
      2rZ2YDEIIOioc1t4//o0pw5tI+Of5O3Lw2xvr1vL3AuO5PgM9q0t6CwFPBjr0bCrz9FbTAgG
      A/4Pr5KeXUSKxll47V3SU/MIZiPL710uaEGMIAiI/jAGhw2d2YQqSUjhGN43PiLWN4YUTzL/
      s1+TnvYgJ1P4P7qGtSkvW1x1MNbr//Q2ncfP0uQysuvoOY7s2cz49CzJRIxMJk0yleKf//lX
      7D9zjiqrgGCr5oVnuhh+OLGWuRcc2UU/oev3C1oQo+YkpGgcKZZEzUmoskLZ/p04Ordib2/B
      Wl9D+ckDpOe8aDmJiqcPk55ZXO+wV0XTNBIDYzh3b0NT8hpgS0MNFWe6ySz4cO7Zgbt7N+kZ
      D2hQ8fRhkmOzwGqCGDnL3Z47RFM5qlu2UZoLMBPM0XVgN9MPbhNMy1Q0tpJbmiIuQd3mHQjx
      eZbiGge6uynd8IOxFER/GEtt5XqH8kTE5RCRnj4EnR6Dw4altgo5mUZOpHAf3UsuECH2cAT3
      0X2IS0FSk3O4j+37Rmfr64Gmaog+P5b6amJ9o+hLrJgqyoje6cd1aDdZn5+s14/76D4SQ5Pk
      ghHcR/dhdNiLgpiNjpLOoLNavjUngL9NPo8JYmRZLg7GKrJhMJvNX64DKIpSrAQX2VCsogdQ
      WRjrp3fcy74jJ4nP3GNsIczmXd2YoxOMetN0nziBuDhE30yEoyeOszR6l0lfiiNnnqbSblzb
      LAqMrGeJXCCCo0BF8aokEb87iG3bZoxuJ5qmkRqeIjk0SflT3aQn58kFwpQ/fZhcOEbk6j3c
      pw9iri7MlujP9QCCXkflS2cw2Evy7zmf9VB2dC/ZhSXSk/O4jnehyTKJvnEqzh0FVtUDKGjm
      Co536fnw2j1yiVl+8p/8GIBY1ILd2MfNvknSc8M8e2gz798Y5aUjeyi39nD13gyvnmpfs+QL
      DTUnEe8dyasBCnQBKKksOosZKRrPLwBZJj0xh/vUASLX7qMvsWLvaCM5OEF62kP1y0+B/utF
      5uuFrW0TJZsbiVy5i86Ub3WO3eyl8sVTCAYDyaFJan/0ImgagXcu4TzYSaI/P75nVYMMt03h
      w0v9HDmyh0anhX/6xd9zo3+WTHCOT++Os6m2inKLxgfXhtncXEPSN8FHtydpbS7Mk4+1IjU2
      g3176xdm0wWIsawUY8UXoiVBr0cwGQm89xnW5npAI3z5DqI/TG45hO+fPiDZX9jznnLLIQwu
      BzqTEVWSyQUjLL/xMfF7g6jpLN6fv0VqZBqD24mpyo0q5rUaT14Acopf/vIdOg4exqaXaNq6
      l13tTfj8CyRyJRzZ287k7BThlED3wR0sjE6TFUo4emgHUyOza5h24SFF4kSu3StogwwlnSG7
      4EP0LKOkM0iROJoo4TjQiegLUNK2CXNdNSWtjVhbGnB07USKxL/+B68TeYOMCUo721AlGU2S
      sTTVUbpvB1IohrWlIa8FiMaRAmFid/Mm4LCaHkDJMTY2SjIj4apppESOsRSTadvaSnhhimBa
      o21rO1LEy+xygvZtbQQXJgmnNLbu2E6JcYPXAVQVKRLHVF6YE8KkSJzU6DTodKCoWBprEAx6
      sgtL2HduIbvgAw1KtrWgxFOkxmew79yCvqQwNQOapiGFopgqXCT6RjG4HBhdTlKj09i2b0YK
      xfKmhZ3tKMk0mXkf9p1bKC1zFvUAGx01J+WdX74ldQA1JyEYDb+7QUaxLlZko2A0GouV4CIb
      l680yMgkIswvLJKVFOJhP7Ozs4TjaWQxTTAcQ9M00vEw8wuL5GSVRCSAxxdALS4nlEy24F8a
      c8HIikkEgBSNk573oikq4nKQ9OwiqiwjP9ozawW8NZbiSVKT86RnPKhS3shDzeVIz3iQUxmk
      WCL/bzkJJSuutIHDVxhkDD3sI5mNcne4nvj8LXbu7kawOPEO3+PiYIT/6i+/x0DvXbLJMNeH
      GiEwQ3WZnpnWpzm+o+qJP3YjoKkqwUu3kWJJGv78hfUO54nkghHCV+/h2L0V25ZNKFmR4MXb
      6GxWcv4wSlZECscQA2HSUwsIBj229macu7aud+hPREllyHqXSQxOUv+jFxEMNvwf30BvNSOY
      jCTHZlAzIqI/lF/gS0Fqv3sW+AqDjL2HD6MXU7gqXIixKAtePwajiY693bhsRkCg6/AxpEyO
      +tpKNClJKJNm7OHo2mVegGS9foxlDoxlpesdyqqYK90493esvPgKOh1yOkPWs0xqegGTuwxx
      KYi5woWp0kX1+ZPkAuF1jnp1LLWVOPZsx76zFUOpDTUnkfX6yfoCoGqUn9i/0vXqOrQbY/kX
      5iWrPAFkLvzql7j3nuV4WxX7t/4PyIEh3r5yl5+e7/r8Ij781WvUH3yZva2VSDs2Ex65xOXA
      xv3tDxC+/iC/nZhdpOL0IfRWy3qH9LUIRgP1P3gecTlEcmQaa1MtFU9157cQ8RRSJP6YkUah
      Ee8bxbl7W94gQ6fDUldF+Yn9BD65ianChaOzHVN52Ype4HOevADkLGlVIN53A1XcjSm2wNRy
      nOOHj3Ht4gUyiQi3e0dIZ1UmH1xBFQ+gBseYj8L55zZuGwRA/Q+eR5VkkqPTBfvhz3iWCFy4
      jqDTIUUT6EssiP4wos9P5TPHVrZwFWcOIS6HCF6+Q/X5k+sd9qpoqorRWYqxzEFqegE1m8O+
      tYWldy5RdqCD6N1B0tMLlO3vIDPvIzXjQWfKL+jiKdAGJ+v1Y66t/NboAbK+AObq8m80ye4x
      PUCxDlBkI2E0Gr+sB5BluVgJLrKh2NhNO0U2PKsIYiR6Ln7KbCBCU8dxohNXyGBj865uDMFB
      7nvgz145xeV3fkUoA0eefZHxi28R1tnp7DrGjg3eEh27N0jOF6TyxVPrHcoTyQUjhC/epuzI
      XiyNNag5ieBH15ACEcy1lShZESWVwXXyAOa6Srx/9zaV509iLlCR/+eCGDkSp/YvXsJY5iB0
      4QZZb4Cy7t1kZj2IXj8Vz50g/mCYnD9E2eG86fcqg7EM7Dt5lqN7mvEuevH4oxw8dJhtTVVs
      330Qg5pF1RIshwW6O2q4cq2XpYjE/u7DbGksTNXQWiHHU0jB6KNZ+4WJsbwMZ/fuFf8CnclI
      1UtncOzfiX33VlA13KcPYqmrIjU0mRfNFPDW2Na2iZo/fQ5bRxsGRymapqFkc7hP7sdUU4HO
      aqHq5adJT3vQZAVH106UdAZYVRADU73XuDMjcu50F0+dOMHk4G0+uN6PTqdDEECnc3H26X34
      lwNIgonDx7rwDt/gw6sbezJc6JMbyLEEyaFJ1FxuvcN5IoIgPNb9qckK4lIIc20lJe2bSPSN
      Eb3RS+jibXL+MOnJ+XWK9puRnpijZHMDgi6fl619E+nJeaLX7+ctYHU6UFUEo4GcP/z1Bhkf
      XbqFlIowNDqBx+PB54/hLLVw8+IFxkYG6OmfZm56nOG5OMe62lhcmMG7HKXM7VizpAsR91Pd
      OA/vwdrSgKBfZYe5zmQX/QTeu0zoo+tk5n1k5r2kJ+ewbd+MJitkpj2IS0GMbge1P3wR29bm
      gt3+QL4OIC4FsGyqQ4olyMx4yMwukvUsYXo0GnH5jY+wNFSjxJJkF77obSrqATY4yaFJrC0N
      6EsKs2j325IcnsK6qe4bGX4UDTKKbGiKBhlFNjRFg4wiG55VBTGesV7efOs9FsNphu9e5vXX
      X6d3woum5Ljx8ccsxtJoqsj1jz7Al5TQ1BzXPnyLpeTaJlCIZDzLxHqH1zuMVVElmfCNB+TC
      eWGImpPwvfkJ8z/7NZE7fWiaRujKXaR4csVgopD53CBj4R/eQU6kgPxuJnyrl1woSvhm74pB
      Ruj6fTz/+Bty4RjwFe3Qkt7NqQM6fnPpNmJ8mr/66X8GQGDqPvd7R7Bs60K3NM3D3gHsu06i
      zvUxNNxHyZ5XqLGvTeKFiCpJRO/mPzDOvTvWOZonIydTCCZjfnKFuwydyUjtd8+Snl1ETqTI
      zCwSH56kZHMjciqNksqsd8hfib29BVvrJoKXb6+0bYu+AInBCYxlDqRInMafvAKAodSGpa6K
      +MDXDMaqcsIHF3s5cnQvjQ4Tr/39z7neN8H1e1Mc2tsGmkxP3yz7OlpQpTT3xgLs29awNhkX
      MMmRaUp3bCno/nmTy4m56nHDi8TwFLbWRpITs5Ttyy9ee9um/Bl6gSMuBzGWPRqMJSskhqco
      298JmoaSSjP/t2+QmphFiiUIfHITa0MNsKoeIMVrr71J9/mXcZlVWncdYVNigYfT45j1cLun
      B2fOgFNV6bnfh1Mop1zKcGtgiHLbGF21hSmdWwvEYIT05Dyp6YWCFcQomSzZxWU0Vc07xWga
      uUgcS20FiighLgcJ3+zFdWg3CPkPVy4cxeQuzDlHmqYRHxin4kw3qiwjRROIy0GiPf1Y6qtw
      7N6GJitkF/2YKt24j+xdsbBaxSBDZHCwn3haoqJhMyVSmMWIxI6OnZRaDCSCAVSbE6fVRCKw
      hFZaicOiJxH0oJY24DSv9S0oLDRFJReOYq50r3coTyQXihLvH1upkFobajA47BjsJegejXSU
      Ygl0ZhOJwQnkeBJLQw329ub1DXwVNE0jFwhjrion1juCoawUW0vDimGeuBxE9Idx7t1OanIe
      KRLHuW87RrutOBZlo6OIOXQm47fmBFAVcwjfMB9BEL58DCpJUtEgYyNSoD1LvzO/RT5fWgCq
      qhYrwUU2FKt0a2mI6QSReAZXRSVyKkoslcXmdKOXUyQyKuUVLmJBP5IKJaUu7GZIZhXKHBv4
      DPQRqphDFXMrE4gLDU3TkKMJ9HYrOqMRTVXJLYdQJRmDw47eYs7H77SjpNJI0QSmRx68hYic
      TCOHY6DX5U089DrkWAIlmcFU6SIXiqLJCkanHTmVQZMVDM78/82qdYChB73EMlES+kbic7fZ
      sn0fNc1WUosj+LyL5Ko6aNInmB6+i9Rylq0lXq49SPBf/tV31jL3gkNTNcKf9SBHE9T86XPr
      Hc4TkUJRItfuU7prKyWtjaCqZBeWEJcC6IxGDM5SpHCUyhdOEesZRMlkMbqdlHXvXu/Qn4iS
      SJGeXiA1OkPtn59Hby8hPTaLFIkhGAzobVaynmXMVW4EswnRs7wyG2iVA14Dew4fwaqKlJY5
      yMSiLIdiWCxmyp12FpbjNNTUsLNrHyIOTu3fQkfXXpzmwjWFWCtySwEMpTYMBTwYy1ThwtG1
      Ex69JwoGA86DnRhdTsqO7sV5ePfKb0jX8S6M5WWYawq3HdpcW4ljfwf2Ha3oS20IOh2mmgrE
      pSDW5nrKDu/BVOnGsb8D56Fd+ev37QRW3QLJXHr7dRwdpzjdVs2Brf8dueAI71/t4dWnunnp
      VJaPx+ZoEgxQtRW3pTAfjetB5PoD5HiS7LwP14kD6K1/HGfCcjKNpqoYHPYvNUXGevopaW3C
      VMBO8QDJ/nHsne0IgoCmqpgqXFQ+f5L4/SFMVW4EvQ69zYqcSKEpCgZH3vP4yZ9cKUtC0ogN
      9YC0E0PMw4w/QffBQ/Tfuow3kePAoROEwxMc6OpAk0VuXLlCWoxwd3iWAzua1zD1wqLmT55F
      lWTSYzMF++HPLvoJf3oLQa9DSaTQWS3oTEZKd29DUxSCH14jO+9DbyshPe0hPblA6e6tlO4u
      zAKnpqro7SUYXQ4ys4soqQyiL0BuOYSzezfiUjD/xAOkcAx7Z/sXYyGLeoCNjej1Y6qpXJES
      /rEj+gKYvuFgrMf0AJIkFRdAkQ2D1WotVoKLbFy+wiCjSJGNwaqDse58eoGp5RAtu08RGbtM
      UrHStvcY6elbzC4naTt0msjQVQIpgSNnn2fm3ics+ZYwtZ/l+ycL0yB6rYjeHSDrC1Dz0pn1
      DuWJ5IIRAp/cxH1sH9bGWgAiPQMkBsdxH99PvG8UJZWm6rkTGN1OFn72JtUvnsJSW5ij75Pj
      M4Rv9CJF4zT95LsYnHYCF26Q8Szj2NVOenaRXCBC6Y5WBKMBKRKn5sXTwKqFMD17TzxDw3QP
      1ycXCC9HeeXV53GXu6DpBRqGr3F7YYqUH546UsvFnil++tL3+ei1f8uWPW1rmXvBISdSiMuh
      b/QStl4YXfmi1ucWSWpOIj3rofLsEXQmEzqTEduW7SRHpzE4SjE47WhS4b4b2ttbKGluIHSl
      J1+/EATcx7pIjk2j5mTq/+Q5Ij39lGyqw1jmIHzr4cr3PnkBCAIzD6/R65M4/+xTLI2Z6btz
      iYStjZ0lAfqCJl585jjRljGmRx4gKjZy0XnmhXqedW7smoD/o2toqkZm3kvlM0dX2osLCUGv
      Q9Dp0B41PmqqipLOEh8YB8DW3kxyZBpBryPSM4DBZiU1vYC1qXY9w/5KkhOzlLQ2rfziUVJp
      cqG8hkGVFXLBKGUHOkHVVgqAsNoCEKO8/cFn1G/rYHBkDNHnwx+OU1Wl8OavP2Xz/gMMTS6i
      eCcYmY9z+pWdDNz9iN0HT6xFrgVNxelDSNE4mqLk++0LkIxnCd9bnyAIAjWvPA2qhrWhmvTM
      Ira2TaSm5sn6/NS8dAbn3h3EB8cxVbjWO+xV0R61clQ+cwwplkD0h4n3jyFFYuiMRuL9Yzj3
      bkcQBJY++IzInb6iQUaRPPH+MUpamzB8g0FSfwzEB8YpaWnAYC/52msfM8goUmQj8ZggplgJ
      LrLRKMxNapEia8Sqghjf1CD3RhY5cPwU8Zl7DM0E2Lyrm10tFdy7eoOGvXsZu36JcFahfstu
      Mr5BwimVTR3ddG2tX9ssCggplvj/2zuzp7jO9Iz/zjm90fsCzS4kFoElJBAIgdCCbMnyJmts
      Z5JM4kyczCS5mJskF/kb8hck90llMnY5mdjj8SIv2kcGJLSAEBIghARi7X3vc/qck4vGxFMS
      ssoVQ4/o3xVFUdT7dfV3lu99n+ch8NFZjGUeSl86uNHlPBY9pxK7Ooq1aStGT97NWw6ECZ0e
      wH2gY9Xe3ftCN+Gzg6jJNPbdzTjbWza48sfzTUCGaDRQeuIIkq2E2JVR0lMz+I7tJzE2hbwQ
      wHf8AEooQvz6bXzHDwBPEMRkdAcHO2r49MwAcnyav/rpOwAEp29w+cpNjA27OPLam9w882vi
      Ni9HXn6TW6ffJ2SwrdvCCxF5IYCrdw/W+sL1SMrFEiCKKOEoRo8TXVUJn7tC2Wt9IIloqTTu
      3nbSkw8o/6PjpCbub3TJT8TWVIe1oZbwucv5Y2ddp6S+BktNOdErozj37sRcUUri5vjqZGh8
      JdB9TWOscq+BL87eYF/3biptBt5795cMjE7x9dBdutobAdCVONdmZdq3eiAXp39aobu+ML1j
      1pPwmQGWfnNmo8tYE6PXhelbxlianEMJRVj878/ziTA+N6nxaWw7GtBVjczMPJa6qg2s+LuR
      l0IYnPa8w4UooiZSBE5dpGRbNUogQvjCFUzlpSvinlK0bF44v4YxVor33/uIvS+foMwKYvsB
      tMQsVyfvYBJ0Lg8N4caPNxTD19CORRK4N9RP9a5ujM/GVO33RjSb8B7tIdJ/A13TCrIjrGVk
      lOV8SopW5Qddw1JTQUlDLanx+6QfzOPa2wqCgLwYwOh1F6weGPIa58ToJJ5Dneg5FTWTRZMV
      PAc6SIxOYtvRiKtrF5kH8yjBCPHhcaSVY9LH6wFyWUZGbqwaY9mUELNhhZ27WleMsZbQbG6U
      6CJmdyUOi8TS3CxWXyV2c+F+UOuBmkgRHRrF2lCLZcV+r9CQg/nnYEESEU0mzFVlGNxOEsN3
      sO9qIjk2hZrKYG2qw2C3IjlsBdnR/gZd15GXQpjLfcSH7yDZrGjZLPJyGGd7C+kVz1Nnx07U
      ZIrU3RmcnTtxuF3FgIzNjprJIplNj2SG/aGiZbIIZtNTGWM9IogpJsUX2UwYjcZiJ7jI5uWR
      TvC3UZUsibSCy2knk4yRyGh4PC4kQScWiWJ2OEFOEU3KeLweBFUmldVwOr57BuNZR8vKeZOp
      p5hH2Qh0XScXSyJZLYhGQ94YKxBGz6lIdiuCJKEmkhi9bpRQBF3V8lYvjsI84s4l0+SicRBF
      zKUeBIOEms6gROOYfG60jIyalTF53eiqihwMY/LkfYHW2AAqd24M8fHgTf7p5z/m/fc/weMy
      4WnqpqNa4l/++V859ot/RLk7SDwaJOnfS4NphrNX4vz9L368jksvPHRNZ/mrr1HCUWrePrnR
      5TwWORAmcLofd+dObI116KpGYnyazNwSotmEZDGTiycpqa1ATWdJzy5gqSyj7Oj+jS79sSjh
      KPGbEyRuT1H7129hcNgIDwyTi8YRDIZ8IIjBgLO1ifjtKQRRzI9Gs+YohMSOvb347QYQJfRs
      kkQ8xvCdCYb6B2jv7kYUBHr6jmIRwOtx07avC4+lcEMh1ovswjIGuxXjyhWmEDGXefH0tK++
      +IpGA76DnVjKSyk9so+yY72Yy32YK8vw9XVh3VKFe2/rBle9NiU1FXgPduJsa8nbUQoCvsN7
      sVT5sVT7ycWTyMEw8dtTpB/M5zfGigvGd59ZGp382c9+TuDuIBduB+gfmcaYjbFkq2Tx0nVK
      95ygq6UKCP3Ay/zDIHBmgFwsQer+XMEGZDyOXDKVN4xy2Amev4yjtQlzqQclGkfXtYL1Of2G
      6PUxnG0teWMsXSc8OEJJTTmW6nIcrU2k78+RXQyCqlH6Qg+BswPAWhtAzXLpzJck4inOXR3D
      kZjhbkCm78WXKH/jJDM3r6P4q7n0wQCJ4YsISieph9eIp4L035yip7V+PddeUNS8/TqakiM+
      OlmwX/707AJLn11AkERy8SRSiQXBaMC5Zwe6opCamiE1NYN7324kqwXnruaCzg/QNQ2DrQST
      15XPOUvkvUITtyZx7GxEiSZQwlHKTzxPyjnLwodf4j3YCRQFMZue9OwClip/QXasvw/ph4tY
      KkoRJOk7//YRQYymacU+QJFNg8FgeDQhptgJLrKZeDbue0WKfE/WtEcf8x74XAAACBBJREFU
      OneaqcUQ23YfIjJxgXjOTP3uHsyRO1yb1fjjk0e4+D/vsiSUsKNtP5n7V5mYj9J9/A3qS58N
      gfX3ITO3xPJvTlOyraZgBTFKKErozACunjYs1eUABL+4RHZuCVf3btLTc2QXlvEc7CQ5Po28
      GMRzqANrY90GV/54vhHE5GIJKt9+HYPTRvjCEJnphzjan0NNpVETKbxH9xP49DxKKIrvxV5g
      rTuALtLa3cehjnqmpx5wfzHC4b4j7NhaTn3zLnQ5ia7rzAST9PYdoaHMyGRE463X93H53NX1
      XHvBoQQjuLrb8Bzau9GlrInBZcfRsWN1Jl7XdTRZwffSQayNW/A+vw9vXxdqOoPncCf21qbV
      yNFCxNZUR8WfvoKtpT7v+y8IuHva8L18CDWdwdmxA9FsQs/l0GQZd08biVuTwBOMsWbGBrk2
      k+bll15g/rbEld99QcbZzI/21+f7J4LI3q5Wbl34lLipDlESkYxm9Fx2HZdeeJjLfcSujpEY
      naTyz18ryNMVQZIQJAk9l1v9naW6nOjgMEa3E5Pfh5pK42hvITu/jBIIYylgUyyA9N0ZSrZV
      r37embllsosBXF2tqydCosmIo3U7ydv34ImNsGyUDz8+Q3VLK2N3JsguBQhFk/j8Epe+OsXo
      yBi1TU2oc4uEIym8O8vQ7t/jV+9+SsvBt9ZnxQWKvBxGXgqCKBbsiHHmYf4xDUHA/6Oj6IpC
      dn4JJRDB6Hay/NGZvMe+QSJ5Zxo1nizoyCdd00jPzOM71pvv+i6HCHxyHoPDhiAKyMthYpdH
      kOxWlFCUzNwipa/kTdyKeoBNTnx4HGtDLdIzYoyVuDmBZWv1Uw0iPqIHKG6AIpuJRzZAsQlW
      ZDMhiuLvN8IKed6jSJEfgicYY43Qf3OG3uePEb07yPWJeZr2HMQan2R0Nk3f0SOY0kuMPUix
      p7WW85//lmAKGnb30tlSuJ44PzRKNM7CB19hKvVQ/lrfRpfzWHRVI3JlBPv2bavGWNHrt4le
      u4Wnp53sUpDsYoDyV/uQbCVEBkewt2zD6CrMF+FvAjJEs4mKky8g2UpI3Zsl/PV1/C8dRMvl
      yM4t49zzHOGvr5O+P4f/1fxL8BrGWAoJxUbf3lp+e+p3ZONT/O3P/gaAYMBEt3GYLwdu01mW
      ZGQ4QEdHM0dP/Am3vvwVS2JhqobWi8z8Mt4DHdgat2x0KWuiRGKg68ihSN4YS9fJLgao+YuT
      +ZDpUg+WilJiw3coqasi3H8dS2VZwW4A+/Zt2BrrCJzuz9u36Dq6ksP/ymEig8OUbKlEDscA
      sDVuwVJVRvTqLWBNYywT1X4zn5++yr79bVRYRX75H/9O/+gM2dADPr5wi4YtlTQ2t2AxrPyL
      XJwLkzK9TYXrI78uaBrLX15i4cOvNrqSNTH53Ji/HXekg5pMM/NvH5C4M5U/Rjw3iKXaT/zm
      BO59uzeu2KckuxTMG2OZTQiiiLnKT/TaLdxdrTh2NCKIAoIgkIsnWfrs4mrYx+M3gJri3f/8
      gF0HX6TaJdHafYz9u7cxeW8CRSrl5UNtjE1OE4uESCYTxJMZ7l27RFXbfkyb/DVCsloof60P
      JZZYTWApNLSsjBKKoIRjaFkZNZ3B3lKP73AniYn7iCYj3t49xIbHyTxcZPnURSLXbm102Wui
      6zqx4XFcK0HfajpD8NxlbI11iCYTciiKEonlxT2qRukL3STGp4G19AC5DENDl4kkZMq3NmOX
      A9wPyuzpbGNh/AZzcZ09HXu4d+MCwRT461ooMyvYympwWDa3MVYuniT09XXszduwFqidYHYp
      SOTyTQRJRLJb8+F3uk7q3iyenjbiY3fJxZN497cjWUuQw1EksxnJWpgCH13TyS4sY6nyE71x
      G8liRg6GkUMxrFurUcL5L7+tvhY1k0EJRPDsb8fotBdtUTY7aiqDWGJ+Zk4A1XQG0fJ063lE
      EJPL5dAK9LZdpMj/N2az+ff7AKqqFjvBRTYVa44qajmFRDKd/1mViYQjZBUVOZMiHImSUzXS
      yTjhSBRV01GVLJFwBDm3ue8gupqP5FQi8Y0uZU10XUdNptBz/3exU1MZ5EA476ys5JCDETQl
      h5pMIwfCaBl5Ayt+MmomixwIowTzJl4AWi5fO+Qfi5RwNB8Hm87kUzxXnnTWNMYaHx7isytj
      /MPfvcOZD98j46imZeceAncuEYxE0Ss7qGae+dkZqNuP8GAQ1VFJa/te6vzOdVl4IZKefkj4
      whC2lnrcPW0bXc5jUYIRQmcGcHbsxNpQC0Dg1EVEgwH77u3Ert5CNJtw7dtF6Kt+JIcNR1vz
      qnim0FCWQ8RHJkhPPqDqnTeQnDbi126TvjeL/82jLH94GsEgUbK1htTdBwgGCfvOfMbFmsZY
      LR09+O0SKGHGpsJomQwWi5Guw8dxWyTs1hL8PhdLkQwVDomJmXk0OYPFUpgnBeuFEoygJtMY
      3YV7ETCVenB1t60GRuuajhII518gzSaUpRBqIoVgkFACEbR0BkOBNsEALLWVePu6sLc1Izlt
      CIKAq6sVc0UpgigillhQk2kkp21FHZYmOTYFPI0xlmjE5aviSE8zvz57iWptDnvrcQ43l5PN
      VnDiSJpPR2bwVtVzpLeJX39ynnd+cuyHXnPBYt/ZiKP9ORb/6xTW7XUFKYh5FJ2Kn7yKlpEJ
      n7+CubYC175dRAeGqfzLk6iJFJFL1yhdydUqROLD4zh2bX/k9EfLyAhGA95jvaQmpqn86Unk
      hQDp+/MA/C8r6Yq1Jpn3mwAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
